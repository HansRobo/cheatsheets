[
{
  "id": "ansible-examples",
  "title": "Ansible examples",
  "url": "/ansible-examples",
  "category": "Ansible",
  "keywords": null,
  "content_html": "<h3 id=\"examples\">Examples</h3>\n\n<ul>\n  <li><a href=\"https://github.com/chelsea/ansible-example-ruby/blob/master/roles/webserver/tasks/main.yml\">Ruby installation</a> <em>(github.com)</em></li>\n  <li><a href=\"https://github.com/chelsea/ansible-example-ruby/blob/master/roles/db/tasks/main.yml\">Postgres installation</a>  <em>(github.com)</em></li>\n  <li><a href=\"https://github.com/tingtun/ansible-playbook-gitlab\">GitLab installation</a> <em>(github.com)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "ansible-guide",
  "title": "Ansible quickstart",
  "url": "/ansible-guide",
  "category": "Ansible",
  "keywords": null,
  "content_html": "<h3 id=\"install-ansible\">Install Ansible</h3>\n\n<pre><code class=\"language-bash\">$ brew install ansible            # OSX\n$ [sudo] apt install ansible      # elsewhere\n</code></pre>\n\n<p>Ansible is available as a package in most OS’s.</p>\n\n<p>See: <a href=\"http://docs.ansible.com/ansible/latest/intro_installation.html\">Installation</a></p>\n\n<h3 id=\"start-your-project\">Start your project</h3>\n\n<pre><code class=\"language-bash\">~$ mkdir setup\n~$ cd setup\n</code></pre>\n\n<p>Make a folder for your Ansible files.</p>\n\n<p>See: <a href=\"http://docs.ansible.com/ansible/latest/intro_getting_started.html\">Getting started</a></p>\n\n<h2 id=\"creating-your-files\">Creating your files</h2>\n\n<h3 id=\"inventory-file\">Inventory file</h3>\n\n<h4 id=\"setuphosts\">~/setup/hosts</h4>\n\n<pre><code class=\"language-dosini\">[sites]\n127.0.0.1\n192.168.0.1\n192.168.0.2\n192.168.0.3\n</code></pre>\n\n<p>This is a list of hosts you want to manage, grouped into groups. (Hint: try\nusing <code>localhost ansible_connection=local</code> to deploy to your local machine.)</p>\n\n<p>See: <a href=\"http://docs.ansible.com/ansible/latest/intro_inventory.html\">Intro to Inventory</a></p>\n\n<h3 id=\"playbook\">Playbook</h3>\n\n<h4 id=\"setupplaybookyml\">~/setup/playbook.yml</h4>\n\n<pre><code class=\"language-yaml\">- hosts: 127.0.0.1\n  user: root\n  tasks:\n    - name: install nginx\n      apt: pkg=nginx state=present\n\n    - name: start nginx every bootup\n      service: name=nginx state=started enabled=yes\n\n    - name: do something in the shell\n      shell: echo hello &gt; /tmp/abc.txt\n\n    - name: install bundler\n      gem: name=bundler state=latest\n</code></pre>\n\n<p>See: <a href=\"http://docs.ansible.com/ansible/latest/playbooks_intro.html\">Intro to Playbooks</a></p>\n\n<h2 id=\"running\">Running</h2>\n\n<h3 id=\"running-ansible-playbook\">Running ansible-playbook</h3>\n\n<pre><code>~/setup$ ls\nhosts\nplaybook.yml\n</code></pre>\n\n<h4 id=\"running-the-playbook\">Running the playbook</h4>\n\n<pre><code>~/setup$ ansible-playbook -i hosts playbook.yml\nPLAY [all] ********************************************************************\n\nGATHERING FACTS ***************************************************************\nok: [127.0.0.1]\n\nTASK: [install nginx] *********************************************************\nok: [127.0.0.1]\n\nTASK: start nginx every bootup] ***********************************************\nok: [127.0.0.1]\n...\n</code></pre>\n\n<h2 id=\"read-more\">Read more</h2>\n\n<ul>\n  <li><a href=\"http://lowendbox.com/blog/getting-started-with-ansible/\">Getting started with Ansible</a> <em>(lowendbox.com)</em></li>\n  <li><a href=\"http://docs.ansible.com/ansible/latest/intro_getting_started.html\">Getting started</a> <em>(docs.ansible.com)</em></li>\n  <li><a href=\"http://docs.ansible.com/ansible/latest/intro_inventory.html\">Intro to Inventory</a> <em>(docs.ansible.com)</em></li>\n  <li><a href=\"http://docs.ansible.com/ansible/latest/playbooks_intro.html\">Intro to Playbooks</a> <em>(docs.ansible.com)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "<p>A quick guide to getting started with your first Ansible playbook.</p>",
  "tags": null,
  "updated": null
},{
  "id": "ansible-modules",
  "title": "Ansible modules",
  "url": "/ansible-modules",
  "category": "Ansible",
  "keywords": null,
  "content_html": "<h2 id=\"format\">Format</h2>\n\n<h3 id=\"basic-file\">Basic file</h3>\n\n<pre><code class=\"language-yaml\">---\n- hosts: production\n  remote_user: root\n  tasks:\n  - ···\n</code></pre>\n\n<p>Place your modules inside <code>tasks</code>.</p>\n\n<h3 id=\"task-formats\">Task formats</h3>\n\n<h4 id=\"one-line\">One-line</h4>\n\n<pre><code class=\"language-yaml\">- apt: pkg=vim state=present\n</code></pre>\n\n<h4 id=\"map\">Map</h4>\n\n<pre><code class=\"language-yaml\">- apt:\n    pkg: vim\n    state: present\n</code></pre>\n\n<h4 id=\"foldable-scalar\">Foldable scalar</h4>\n\n<pre><code class=\"language-yaml\">- apt: &gt;\n    pkg=vim\n    state=present\n</code></pre>\n\n<p>Define your tasks in any of these formats. One-line format is preferred for short declarations, while maps are preferred for longer.</p>\n\n<h2 id=\"modules\">Modules</h2>\n\n<h3 id=\"aptitude\">Aptitude</h3>\n\n<h4 id=\"packages\">Packages</h4>\n\n<pre><code class=\"language-yaml\">- apt:\n    pkg: nodejs\n    state: present # absent | latest\n    update_cache: yes\n    force: no\n</code></pre>\n\n<h4 id=\"deb-files\">Deb files</h4>\n\n<pre><code class=\"language-yaml\">- apt:\n    deb: \"https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb\"\n</code></pre>\n\n<h4 id=\"repositories\">Repositories</h4>\n\n<pre><code class=\"language-yaml\">- apt_repository:\n    repo: \"deb https://··· raring main\"\n    state: present\n</code></pre>\n\n<h4 id=\"repository-keys\">Repository keys</h4>\n\n<pre><code class=\"language-yaml\">- apt_key:\n    id: AC40B2F7\n    url: \"http://···\"\n    state: present\n</code></pre>\n\n<h3 id=\"git\">git</h3>\n\n<pre><code class=\"language-yaml\">- git:\n    repo: git://github.com/\n    dest: /srv/checkout\n    version: master\n    depth: 10\n    bare: yes\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/git_module\">git module</a></p>\n\n<h3 id=\"git_config\">git_config</h3>\n\n<pre><code class=\"language-yaml\">- git_config:\n    name: user.email\n    scope: global # local | system\n    value: hi@example.com\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/git_config_module\">git_config module</a></p>\n\n<h3 id=\"user\">user</h3>\n\n<pre><code class=\"language-yaml\">- user:\n    state: present\n    name: git\n    system: yes\n    shell: /bin/sh\n    groups: admin\n    comment: \"Git Version Control\"\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/user_module\">user module</a></p>\n\n<h3 id=\"service\">service</h3>\n\n<pre><code class=\"language-yaml\">- service:\n    name: nginx\n    state: started\n    enabled: yes     # optional\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/service_module\">service module</a></p>\n\n<h2 id=\"shell\">Shell</h2>\n\n<h3 id=\"shell-1\">shell</h3>\n\n<pre><code class=\"language-yaml\">- shell: apt-get install nginx -y\n</code></pre>\n\n<h4 id=\"extra-options\">Extra options</h4>\n\n<pre><code class=\"language-yaml\">- shell: echo hello\n  args:\n    creates: /path/file  # skip if this exists\n    removes: /path/file  # skip if this is missing\n    chdir: /path         # cd here before running\n</code></pre>\n\n<h4 id=\"multiline-example\">Multiline example</h4>\n\n<pre><code class=\"language-yaml\">- shell: |\n    echo \"hello there\"\n    echo \"multiple lines\"\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/shell_module\">shell module</a></p>\n\n<h3 id=\"script\">script</h3>\n\n<pre><code class=\"language-yaml\">- script: /x/y/script.sh\n  args:\n    creates: /path/file  # skip if this exists\n    removes: /path/file  # skip if this is missing\n    chdir: /path         # cd here before running\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/script_module\">script module</a></p>\n\n<h2 id=\"files\">Files</h2>\n\n<h3 id=\"file\">file</h3>\n\n<pre><code class=\"language-yaml\">- file:\n    path: /etc/dir\n    state: directory # file | link | hard | touch | absent\n\n    # Optional:\n    owner: bin\n    group: wheel\n    mode: 0644\n    recurse: yes  # mkdir -p\n    force: yes    # ln -nfs\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/file_module\">file module</a></p>\n\n<h3 id=\"copy\">copy</h3>\n\n<pre><code class=\"language-yaml\">- copy:\n    src: /app/config/nginx.conf\n    dest: /etc/nginx/nginx.conf\n\n    # Optional:\n    owner: user\n    group: user\n    mode: 0644\n    backup: yes\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/copy_module\">copy module</a></p>\n\n<h3 id=\"template\">template</h3>\n\n<pre><code class=\"language-yaml\">- template:\n    src: config/redis.j2\n    dest: /etc/redis.conf\n\n    # Optional:\n    owner: user\n    group: user\n    mode: 0644\n    backup: yes\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/template_module\">template module</a></p>\n\n<h2 id=\"local-actions\">Local actions</h2>\n\n<h3 id=\"local_action\">local_action</h3>\n\n<pre><code class=\"language-yaml\">- name: do something locally\n  local_action: shell echo hello\n</code></pre>\n\n<h3 id=\"debug\">debug</h3>\n\n<pre><code class=\"language-yaml\">- debug:\n    msg: \"Hello {{ var }}\"\n</code></pre>\n\n<p>See: <a href=\"http://devdocs.io/ansible/debug_module\">debug module</a></p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-03"
},{
  "id": "ansible-roles",
  "title": "Ansible roles",
  "url": "/ansible-roles",
  "category": "Ansible",
  "keywords": null,
  "content_html": "<h3 id=\"structure\">Structure</h3>\n\n<pre><code>roles/\n  common/\n    tasks/\n    handlers/\n    files/              # 'copy' will refer to this\n    templates/          # 'template' will refer to this\n    meta/               # Role dependencies here\n    vars/\n    defaults/\n      main.yml\n</code></pre>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n  <li>http://www.ansibleworks.com/docs/playbooks_roles.html</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "ansible",
  "title": "Ansible",
  "url": "/ansible",
  "category": "Ansible",
  "keywords": null,
  "content_html": "<h2 id=\"getting-started\">Getting started</h2>\n\n<h3 id=\"hosts\">Hosts</h3>\n\n<pre><code>$ sudo mkdir /etc/ansible\n$ sudo vim /etc/ansible/hosts\n\n[example]\n192.0.2.101\n192.0.2.102\n</code></pre>\n\n<h3 id=\"running-a-playbook\">Running a playbook</h3>\n\n<pre><code>$ ansible-playbook playbook.yml\n</code></pre>\n\n<h2 id=\"tasks\">Tasks</h2>\n\n<pre><code>- hosts: all\n  user: root\n  sudo: no\n  vars:\n    aaa: bbb\n  tasks:\n    - ...\n  handlers:\n    - ...\n</code></pre>\n\n<h3 id=\"includes\">Includes</h3>\n\n<pre><code>tasks:\n  - include: db.yml\nhandlers:\n  - include: db.yml user=timmy\n</code></pre>\n\n<h2 id=\"handlers\">Handlers</h2>\n\n<pre><code>handlers:\n  - name: start apache2\n    action: service name=apache2 state=started\n\ntasks:\n  - name: install apache\n    action: apt pkg=apache2 state=latest\n    notify:\n      - start apache2\n</code></pre>\n\n<h2 id=\"vars\">Vars</h2>\n\n<pre><code>- host: lol\n  vars_files:\n    - vars.yml\n  vars:\n    project_root: /etc/xyz\n  tasks:\n    - name: Create the SSH directory.\n      file: state=directory path=${project_root}/home/.ssh/\n      only_if: \"$vm == 0\"\n</code></pre>\n\n<h2 id=\"roles\">Roles</h2>\n\n<pre><code>- host: xxx\n  roles:\n    - db\n    - { role:ruby, sudo_user:$user }\n    - web\n\n# Uses:\n# roles/db/tasks/*.yml\n# roles/db/handlers/*.yml\n</code></pre>\n\n<h3 id=\"task-failures\">Task: Failures</h3>\n\n<pre><code>- name: my task\n  command: ...\n  register: result\n  failed_when: \"'FAILED' in result.stderr\"\n\n  ignore_errors: yes\n\n  changed_when: \"result.rc != 2\"\n</code></pre>\n\n<h3 id=\"env-vars\">Env vars</h3>\n\n<pre><code>vars:\n  local_home: \"{{ lookup('env','HOME') }}\"\n</code></pre>\n\n<h2 id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"http://www.ansibleworks.com/docs/intro_configuration.html\">Intro</a></li>\n  <li><a href=\"http://www.ansibleworks.com/docs/modules.html\">Modules</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "atom",
  "title": "Atom",
  "url": "/atom",
  "category": "Apps",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"shortcuts\">Shortcuts</h2>\n\n<h3 id=\"tree\">Tree</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘\\</code></td>\n      <td>Toggle tree</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧\\</code></td>\n      <td>Reveal current file</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"comments\">Comments</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘/</code></td>\n      <td>Toggle comments</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"view\">View</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘k</code> <code>←</code></td>\n      <td>Split pane to the left</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘⌥=</code></td>\n      <td>Grow pane</td>\n    </tr>\n    <tr>\n      <td><code>⌘⌥-</code></td>\n      <td>Shrink pane</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>^⇧←</code></td>\n      <td>Move tab to left</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"bracket-matcher\">Bracket matcher</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>^m</code></td>\n      <td>Go to matching bracket</td>\n    </tr>\n    <tr>\n      <td><code>^]</code></td>\n      <td>Remove brackets from selection</td>\n    </tr>\n    <tr>\n      <td><code>^⌘m</code></td>\n      <td>Select inside brackets</td>\n    </tr>\n    <tr>\n      <td><code>⌥⌘.</code></td>\n      <td>Close tag</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"symbols-view\">Symbols view</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>^⌥↓</code></td>\n      <td>Jump to declaration under cursor</td>\n    </tr>\n    <tr>\n      <td><code>^⇧r</code></td>\n      <td>Show tags</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Symbols view enables Ctags support for Atom.</p>\n\n<p>See: <a href=\"https://atom.io/packages/symbols-view\">Symbols view</a></p>\n\n<h3 id=\"git\">Git</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>^⇧9</code></td>\n      <td>Show Git pane</td>\n    </tr>\n    <tr>\n      <td><code>^⇧8</code></td>\n      <td>Show GitHub pane</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"editing\">Editing</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘d</code></td>\n      <td>Select word</td>\n    </tr>\n    <tr>\n      <td><code>⌘l</code></td>\n      <td>Select line</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘↓</code></td>\n      <td>Move line down</td>\n    </tr>\n    <tr>\n      <td><code>⌘↑</code></td>\n      <td>Move line up</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘⏎</code></td>\n      <td>New line below</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧⏎</code></td>\n      <td>New line above</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘⇧k</code></td>\n      <td>Delete line</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧d</code></td>\n      <td>Duplicate line</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"project\">Project</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘⇧p</code></td>\n      <td>Command palette</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧a</code></td>\n      <td>Add project folder</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘n</code></td>\n      <td>New file</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧n</code></td>\n      <td>New window</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘f</code></td>\n      <td>Find in file</td>\n    </tr>\n    <tr>\n      <td><code>⌘⇧f</code></td>\n      <td>Find in project</td>\n    </tr>\n    <tr>\n      <td><code>⌘t</code></td>\n      <td>Search files in project</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"notes\">Notes</h2>\n\n<h3>⌘</h3>\n\n<ul>\n  <li>For Windows and Linux, <code>⌘</code> is the <code>Control</code> key.</li>\n  <li>For macOS, it’s the <code>Command</code> key.</li>\n</ul>\n\n<h3 id=\"-1\">⌥</h3>\n\n<ul>\n  <li>For Windows and Linux, <code>⌥</code> is the <code>Alt</code> key.</li>\n  <li>For macOS, it’s the <code>Option</code> key.</li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-06-14"
},{
  "id": "bash",
  "title": "Bash scripting",
  "url": "/bash",
  "category": "CLI",
  "keywords": ["Variables","Functions","Interpolation","Brace expansions","Loops","Conditional execution","Command substitution"],
  "content_html": "<h2 class=\"-three-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<p>This is a quick reference to getting started with Bash scripting.</p>\n\n<ul>\n  <li><a href=\"https://learnxinyminutes.com/docs/bash/\">Learn bash in y minutes</a> <em>(learnxinyminutes.com)</em></li>\n  <li><a href=\"http://mywiki.wooledge.org/BashGuide\">Bash Guide</a> <em>(mywiki.wooledge.org)</em></li>\n</ul>\n\n<h3 id=\"example\">Example</h3>\n\n<pre><code class=\"language-bash\">#!/usr/bin/env bash\n\nNAME=\"John\"\necho \"Hello $NAME!\"\n</code></pre>\n\n<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-bash\">NAME=\"John\"\necho $NAME\necho \"$NAME\"\necho \"${NAME}!\"\n</code></pre>\n\n<h3 id=\"string-quotes\">String quotes</h3>\n\n<pre><code class=\"language-bash\">NAME=\"John\"\necho \"Hi $NAME\"  #=&gt; Hi John\necho 'Hi $NAME'  #=&gt; Hi $NAME\n</code></pre>\n\n<h3 id=\"shell-execution\">Shell execution</h3>\n\n<pre><code class=\"language-bash\">echo \"I'm in $(pwd)\"\necho \"I'm in `pwd`\"\n# Same\n</code></pre>\n\n<p>See <a href=\"http://wiki.bash-hackers.org/syntax/expansion/cmdsubst\">Command substitution</a></p>\n\n<h3 id=\"conditional-execution\">Conditional execution</h3>\n\n<pre><code class=\"language-bash\">git commit &amp;&amp; git push\ngit commit || echo \"Commit failed\"\n</code></pre>\n\n<h3 id=\"functions-example\">Functions</h3>\n\n<pre><code class=\"language-bash\">get_name() {\n  echo \"John\"\n}\n\necho \"You are $(get_name)\"\n</code></pre>\n\n<p>See: <a href=\"#functions\">Functions</a></p>\n\n<h3 id=\"conditionals-example\">Conditionals</h3>\n\n<pre><code class=\"language-bash\">if [[ -z \"$string\" ]]; then\n  echo \"String is empty\"\nelif [[ -n \"$string\" ]]; then\n  echo \"String is not empty\"\nfi\n</code></pre>\n\n<p>See: <a href=\"#conditionals\">Conditionals</a></p>\n\n<h3 id=\"strict-mode\">Strict mode</h3>\n\n<pre><code class=\"language-bash\">set -euo pipefail\nIFS=$'\\n\\t'\n</code></pre>\n\n<p>See: <a href=\"http://redsymbol.net/articles/unofficial-bash-strict-mode/\">Unofficial bash strict mode</a></p>\n\n<h3 id=\"brace-expansion\">Brace expansion</h3>\n\n<pre><code class=\"language-bash\">echo {A,B}.js\n</code></pre>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>{A,B}</code></td>\n      <td>Same as <code>A B</code></td>\n    </tr>\n    <tr>\n      <td><code>{A,B}.js</code></td>\n      <td>Same as <code>A.js B.js</code></td>\n    </tr>\n    <tr>\n      <td><code>{1..5}</code></td>\n      <td>Same as <code>1 2 3 4 5</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"http://wiki.bash-hackers.org/syntax/expansion/brace\">Brace expansion</a></p>\n\n<h2 class=\"-three-column\" id=\"parameter-expansions\">Parameter expansions</h2>\n\n<h3 id=\"basics\">Basics</h3>\n\n<pre><code class=\"language-bash\">name=\"John\"\necho ${name}\necho ${name/J/j}    #=&gt; \"john\" (substitution)\necho ${name:0:2}    #=&gt; \"Jo\" (slicing)\necho ${name::2}     #=&gt; \"Jo\" (slicing)\necho ${name::-1}    #=&gt; \"Joh\" (slicing)\necho ${name:(-1)}   #=&gt; \"n\" (slicing from right)\necho ${name:(-2):1} #=&gt; \"h\" (slicing from right)\necho ${food:-Cake}  #=&gt; $food or \"Cake\"\n</code></pre>\n\n<pre><code class=\"language-bash\">length=2\necho ${name:0:length}  #=&gt; \"Jo\"\n</code></pre>\n\n<p>See: <a href=\"http://wiki.bash-hackers.org/syntax/pe\">Parameter expansion</a></p>\n\n<pre><code class=\"language-bash\">STR=\"/path/to/foo.cpp\"\necho ${STR%.cpp}    # /path/to/foo\necho ${STR%.cpp}.o  # /path/to/foo.o\necho ${STR%/*}      # /path/to\n\necho ${STR##*.}     # cpp (extension)\necho ${STR##*/}     # foo.cpp (basepath)\n\necho ${STR#*/}      # path/to/foo.cpp\necho ${STR##*/}     # foo.cpp\n\necho ${STR/foo/bar} # /path/to/bar.cpp\n</code></pre>\n\n<pre><code class=\"language-bash\">STR=\"Hello world\"\necho ${STR:6:5}   # \"world\"\necho ${STR: -5:5}  # \"world\"\n</code></pre>\n\n<pre><code class=\"language-bash\">SRC=\"/path/to/foo.cpp\"\nBASE=${SRC##*/}   #=&gt; \"foo.cpp\" (basepath)\nDIR=${SRC%$BASE}  #=&gt; \"/path/to/\" (dirpath)\n</code></pre>\n\n<h3 id=\"substitution\">Substitution</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>${FOO%suffix}</code></td>\n      <td>Remove suffix</td>\n    </tr>\n    <tr>\n      <td><code>${FOO#prefix}</code></td>\n      <td>Remove prefix</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>${FOO%%suffix}</code></td>\n      <td>Remove long suffix</td>\n    </tr>\n    <tr>\n      <td><code>${FOO##prefix}</code></td>\n      <td>Remove long prefix</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>${FOO/from/to}</code></td>\n      <td>Replace first match</td>\n    </tr>\n    <tr>\n      <td><code>${FOO//from/to}</code></td>\n      <td>Replace all</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>${FOO/%from/to}</code></td>\n      <td>Replace suffix</td>\n    </tr>\n    <tr>\n      <td><code>${FOO/#from/to}</code></td>\n      <td>Replace prefix</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"comments\">Comments</h3>\n\n<pre><code class=\"language-bash\"># Single line comment\n</code></pre>\n\n<pre><code class=\"language-bash\">: '\nThis is a\nmulti line\ncomment\n'\n</code></pre>\n\n<h3 id=\"substrings\">Substrings</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>${FOO:0:3}</code></td>\n      <td>Substring <em>(position, length)</em></td>\n    </tr>\n    <tr>\n      <td><code>${FOO:(-3):3}</code></td>\n      <td>Substring from the right</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"length\">Length</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>${#FOO}</code></td>\n      <td>Length of <code>$FOO</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"manipulation\">Manipulation</h3>\n\n<pre><code class=\"language-bash\">STR=\"HELLO WORLD!\"\necho ${STR,}   #=&gt; \"hELLO WORLD!\" (lowercase 1st letter)\necho ${STR,,}  #=&gt; \"hello world!\" (all lowercase)\n\nSTR=\"hello world!\"\necho ${STR^}   #=&gt; \"Hello world!\" (uppercase 1st letter)\necho ${STR^^}  #=&gt; \"HELLO WORLD!\" (all uppercase)\n</code></pre>\n\n<h3 id=\"default-values\">Default values</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>${FOO:-val}</code></td>\n      <td><code>$FOO</code>, or <code>val</code> if unset (or null)</td>\n    </tr>\n    <tr>\n      <td><code>${FOO:=val}</code></td>\n      <td>Set <code>$FOO</code> to <code>val</code> if unset (or null)</td>\n    </tr>\n    <tr>\n      <td><code>${FOO:+val}</code></td>\n      <td><code>val</code> if <code>$FOO</code> is set (and not null)</td>\n    </tr>\n    <tr>\n      <td><code>${FOO:?message}</code></td>\n      <td>Show error message and exit if <code>$FOO</code> is unset (or null)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Omitting the <code>:</code> removes the (non)nullity checks, e.g. <code>${FOO-val}</code> expands to <code>val</code> if unset otherwise <code>$FOO</code>.</p>\n\n<h2 class=\"-three-column\" id=\"loops\">Loops</h2>\n\n<h3 id=\"basic-for-loop\">Basic for loop</h3>\n\n<pre><code class=\"language-bash\">for i in /etc/rc.*; do\n  echo $i\ndone\n</code></pre>\n\n<h3 id=\"c-like-for-loop\">C-like for loop</h3>\n\n<pre><code class=\"language-bash\">for ((i = 0 ; i &lt; 100 ; i++)); do\n  echo $i\ndone\n</code></pre>\n\n<h3 id=\"ranges\">Ranges</h3>\n\n<pre><code class=\"language-bash\">for i in {1..5}; do\n    echo \"Welcome $i\"\ndone\n</code></pre>\n\n<h4 id=\"with-step-size\">With step size</h4>\n\n<pre><code class=\"language-bash\">for i in {5..50..5}; do\n    echo \"Welcome $i\"\ndone\n</code></pre>\n\n<h3 id=\"reading-lines\">Reading lines</h3>\n\n<pre><code class=\"language-bash\">cat file.txt | while read line; do\n  echo $line\ndone\n</code></pre>\n\n<h3 id=\"forever\">Forever</h3>\n\n<pre><code class=\"language-bash\">while true; do\n  ···\ndone\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"functions\">Functions</h2>\n\n<h3 id=\"defining-functions\">Defining functions</h3>\n\n<pre><code class=\"language-bash\">myfunc() {\n    echo \"hello $1\"\n}\n</code></pre>\n\n<pre><code class=\"language-bash\"># Same as above (alternate syntax)\nfunction myfunc() {\n    echo \"hello $1\"\n}\n</code></pre>\n\n<pre><code class=\"language-bash\">myfunc \"John\"\n</code></pre>\n\n<h3 id=\"returning-values\">Returning values</h3>\n\n<pre><code class=\"language-bash\">myfunc() {\n    local myresult='some value'\n    echo $myresult\n}\n</code></pre>\n\n<pre><code class=\"language-bash\">result=\"$(myfunc)\"\n</code></pre>\n\n<h3 id=\"raising-errors\">Raising errors</h3>\n\n<pre><code class=\"language-bash\">myfunc() {\n  return 1\n}\n</code></pre>\n\n<pre><code class=\"language-bash\">if myfunc; then\n  echo \"success\"\nelse\n  echo \"failure\"\nfi\n</code></pre>\n\n<h3 id=\"arguments\">Arguments</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>$#</code></td>\n      <td>Number of arguments</td>\n    </tr>\n    <tr>\n      <td><code>$*</code></td>\n      <td>All arguments</td>\n    </tr>\n    <tr>\n      <td><code>$@</code></td>\n      <td>All arguments, starting from first</td>\n    </tr>\n    <tr>\n      <td><code>$1</code></td>\n      <td>First argument</td>\n    </tr>\n    <tr>\n      <td><code>$_</code></td>\n      <td>Last argument of the previous command</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"http://wiki.bash-hackers.org/syntax/shellvars#special_parameters_and_shell_variables\">Special parameters</a>.</p>\n\n<h2 class=\"-three-column\" id=\"conditionals\">Conditionals</h2>\n\n<h3 id=\"conditions\">Conditions</h3>\n\n<p>Note that <code>[[</code> is actually a command/program that returns either <code>0</code> (true) or <code>1</code> (false). Any program that obeys the same logic (like all base utils, such as <code>grep(1)</code> or <code>ping(1)</code>) can be used as condition, see examples.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Condition</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>[[ -z STRING ]]</code></td>\n      <td>Empty string</td>\n    </tr>\n    <tr>\n      <td><code>[[ -n STRING ]]</code></td>\n      <td>Not empty string</td>\n    </tr>\n    <tr>\n      <td><code>[[ STRING == STRING ]]</code></td>\n      <td>Equal</td>\n    </tr>\n    <tr>\n      <td><code>[[ STRING != STRING ]]</code></td>\n      <td>Not Equal</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[[ NUM -eq NUM ]]</code></td>\n      <td>Equal</td>\n    </tr>\n    <tr>\n      <td><code>[[ NUM -ne NUM ]]</code></td>\n      <td>Not equal</td>\n    </tr>\n    <tr>\n      <td><code>[[ NUM -lt NUM ]]</code></td>\n      <td>Less than</td>\n    </tr>\n    <tr>\n      <td><code>[[ NUM -le NUM ]]</code></td>\n      <td>Less than or equal</td>\n    </tr>\n    <tr>\n      <td><code>[[ NUM -gt NUM ]]</code></td>\n      <td>Greater than</td>\n    </tr>\n    <tr>\n      <td><code>[[ NUM -ge NUM ]]</code></td>\n      <td>Greater than or equal</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[[ STRING =~ STRING ]]</code></td>\n      <td>Regexp</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>(( NUM &lt; NUM ))</code></td>\n      <td>Numeric conditions</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"more-conditions\">More conditions</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Condition</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>[[ -o noclobber ]]</code></td>\n      <td>If OPTIONNAME is enabled</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[[ ! EXPR ]]</code></td>\n      <td>Not</td>\n    </tr>\n    <tr>\n      <td><code>[[ X &amp;&amp; Y ]]</code></td>\n      <td>And</td>\n    </tr>\n    <tr>\n      <td><code>[[ X || Y ]]</code></td>\n      <td>Or</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"file-conditions\">File conditions</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Condition</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>[[ -e FILE ]]</code></td>\n      <td>Exists</td>\n    </tr>\n    <tr>\n      <td><code>[[ -r FILE ]]</code></td>\n      <td>Readable</td>\n    </tr>\n    <tr>\n      <td><code>[[ -h FILE ]]</code></td>\n      <td>Symlink</td>\n    </tr>\n    <tr>\n      <td><code>[[ -d FILE ]]</code></td>\n      <td>Directory</td>\n    </tr>\n    <tr>\n      <td><code>[[ -w FILE ]]</code></td>\n      <td>Writable</td>\n    </tr>\n    <tr>\n      <td><code>[[ -s FILE ]]</code></td>\n      <td>Size is &gt; 0 bytes</td>\n    </tr>\n    <tr>\n      <td><code>[[ -f FILE ]]</code></td>\n      <td>File</td>\n    </tr>\n    <tr>\n      <td><code>[[ -x FILE ]]</code></td>\n      <td>Executable</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[[ FILE1 -nt FILE2 ]]</code></td>\n      <td>1 is more recent than 2</td>\n    </tr>\n    <tr>\n      <td><code>[[ FILE1 -ot FILE2 ]]</code></td>\n      <td>2 is more recent than 1</td>\n    </tr>\n    <tr>\n      <td><code>[[ FILE1 -ef FILE2 ]]</code></td>\n      <td>Same files</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"example-1\">Example</h3>\n\n<pre><code class=\"language-bash\"># String\nif [[ -z \"$string\" ]]; then\n  echo \"String is empty\"\nelif [[ -n \"$string\" ]]; then\n  echo \"String is not empty\"\nelse\n  echo \"This never happens\"\nfi\n</code></pre>\n\n<pre><code class=\"language-bash\"># Combinations\nif [[ X &amp;&amp; Y ]]; then\n  ...\nfi\n</code></pre>\n\n<pre><code class=\"language-bash\"># Equal\nif [[ \"$A\" == \"$B\" ]]\n</code></pre>\n\n<pre><code class=\"language-bash\"># Regex\nif [[ \"A\" =~ . ]]\n</code></pre>\n\n<pre><code class=\"language-bash\">if (( $a &lt; $b )); then\n   echo \"$a is smaller than $b\"\nfi\n</code></pre>\n\n<pre><code class=\"language-bash\">if [[ -e \"file.txt\" ]]; then\n  echo \"file exists\"\nfi\n</code></pre>\n\n<h2 id=\"arrays\">Arrays</h2>\n\n<h3 id=\"defining-arrays\">Defining arrays</h3>\n\n<pre><code class=\"language-bash\">Fruits=('Apple' 'Banana' 'Orange')\n</code></pre>\n\n<pre><code class=\"language-bash\">Fruits[0]=\"Apple\"\nFruits[1]=\"Banana\"\nFruits[2]=\"Orange\"\n</code></pre>\n\n<h3 id=\"working-with-arrays\">Working with arrays</h3>\n\n<pre><code class=\"language-bash\">echo ${Fruits[0]}           # Element #0\necho ${Fruits[-1]}          # Last element\necho ${Fruits[@]}           # All elements, space-separated\necho ${#Fruits[@]}          # Number of elements\necho ${#Fruits}             # String length of the 1st element\necho ${#Fruits[3]}          # String length of the Nth element\necho ${Fruits[@]:3:2}       # Range (from position 3, length 2)\necho ${!Fruits[@]}          # Keys of all elements, space-separated\n</code></pre>\n\n<h3 id=\"operations\">Operations</h3>\n\n<pre><code class=\"language-bash\">Fruits=(\"${Fruits[@]}\" \"Watermelon\")    # Push\nFruits+=('Watermelon')                  # Also Push\nFruits=( ${Fruits[@]/Ap*/} )            # Remove by regex match\nunset Fruits[2]                         # Remove one item\nFruits=(\"${Fruits[@]}\")                 # Duplicate\nFruits=(\"${Fruits[@]}\" \"${Veggies[@]}\") # Concatenate\nlines=(`cat \"logfile\"`)                 # Read from file\n</code></pre>\n\n<h3 id=\"iteration\">Iteration</h3>\n\n<pre><code class=\"language-bash\">for i in \"${arrayName[@]}\"; do\n  echo $i\ndone\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"dictionaries\">Dictionaries</h2>\n\n<h3 id=\"defining\">Defining</h3>\n\n<pre><code class=\"language-bash\">declare -A sounds\n</code></pre>\n\n<pre><code class=\"language-bash\">sounds[dog]=\"bark\"\nsounds[cow]=\"moo\"\nsounds[bird]=\"tweet\"\nsounds[wolf]=\"howl\"\n</code></pre>\n\n<p>Declares <code>sound</code> as a Dictionary object (aka associative array).</p>\n\n<h3 id=\"working-with-dictionaries\">Working with dictionaries</h3>\n\n<pre><code class=\"language-bash\">echo ${sounds[dog]} # Dog's sound\necho ${sounds[@]}   # All values\necho ${!sounds[@]}  # All keys\necho ${#sounds[@]}  # Number of elements\nunset sounds[dog]   # Delete dog\n</code></pre>\n\n<h3 id=\"iteration-1\">Iteration</h3>\n\n<h4 id=\"iterate-over-values\">Iterate over values</h4>\n\n<pre><code class=\"language-bash\">for val in \"${sounds[@]}\"; do\n  echo $val\ndone\n</code></pre>\n\n<h4 id=\"iterate-over-keys\">Iterate over keys</h4>\n\n<pre><code class=\"language-bash\">for key in \"${!sounds[@]}\"; do\n  echo $key\ndone\n</code></pre>\n\n<h2 id=\"options\">Options</h2>\n\n<h3 id=\"options-1\">Options</h3>\n\n<pre><code class=\"language-bash\">set -o noclobber  # Avoid overlay files (echo \"hi\" &gt; foo)\nset -o errexit    # Used to exit upon error, avoiding cascading errors\nset -o pipefail   # Unveils hidden failures\nset -o nounset    # Exposes unset variables\n</code></pre>\n\n<h3 id=\"glob-options\">Glob options</h3>\n\n<pre><code class=\"language-bash\">shopt -s nullglob    # Non-matching globs are removed  ('*.foo' =&gt; '')\nshopt -s failglob    # Non-matching globs throw errors\nshopt -s nocaseglob  # Case insensitive globs\nshopt -s dotglob     # Wildcards match dotfiles (\"*.sh\" =&gt; \".foo.sh\")\nshopt -s globstar    # Allow ** for recursive matches ('lib/**/*.rb' =&gt; 'lib/a/b/c.rb')\n</code></pre>\n\n<p>Set <code>GLOBIGNORE</code> as a colon-separated list of patterns to be removed from glob\nmatches.</p>\n\n<h2 id=\"history\">History</h2>\n\n<h3 id=\"commands\">Commands</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Command</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>history</code></td>\n      <td>Show history</td>\n    </tr>\n    <tr>\n      <td><code>shopt -s histverify</code></td>\n      <td>Don’t execute expanded result immediately</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"expansions\">Expansions</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>!$</code></td>\n      <td>Expand last parameter of most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!*</code></td>\n      <td>Expand all parameters of most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!-n</code></td>\n      <td>Expand <code>n</code>th most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!n</code></td>\n      <td>Expand <code>n</code>th command in history</td>\n    </tr>\n    <tr>\n      <td><code>!&lt;command&gt;</code></td>\n      <td>Expand most recent invocation of command <code>&lt;command&gt;</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"operations-1\">Operations</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>!!</code></td>\n      <td>Execute last command again</td>\n    </tr>\n    <tr>\n      <td><code>!!:s/&lt;FROM&gt;/&lt;TO&gt;/</code></td>\n      <td>Replace first occurrence of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!!:gs/&lt;FROM&gt;/&lt;TO&gt;/</code></td>\n      <td>Replace all occurrences of <code>&lt;FROM&gt;</code> to <code>&lt;TO&gt;</code> in most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!$:t</code></td>\n      <td>Expand only basename from last parameter of most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!$:h</code></td>\n      <td>Expand only directory from last parameter of most recent command</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>!!</code> and <code>!$</code> can be replaced with any valid expansion.</p>\n\n<h3 id=\"slices\">Slices</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>!!:n</code></td>\n      <td>Expand only <code>n</code>th token from most recent command (command is <code>0</code>; first argument is <code>1</code>)</td>\n    </tr>\n    <tr>\n      <td><code>!^</code></td>\n      <td>Expand first argument from most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!$</code></td>\n      <td>Expand last token from most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!!:n-m</code></td>\n      <td>Expand range of tokens from most recent command</td>\n    </tr>\n    <tr>\n      <td><code>!!:n-$</code></td>\n      <td>Expand <code>n</code>th token to last from most recent command</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><code>!!</code> can be replaced with any valid expansion i.e. <code>!cat</code>, <code>!-2</code>, <code>!42</code>, etc.</p>\n\n<h2 id=\"miscellaneous\">Miscellaneous</h2>\n\n<h3 id=\"numeric-calculations\">Numeric calculations</h3>\n\n<pre><code class=\"language-bash\">$((a + 200))      # Add 200 to $a\n</code></pre>\n\n<pre><code class=\"language-bash\">$((RANDOM%=200))  # Random number 0..200\n</code></pre>\n\n<h3 id=\"subshells\">Subshells</h3>\n\n<pre><code class=\"language-bash\">(cd somedir; echo \"I'm now in $PWD\")\npwd # still in first directory\n</code></pre>\n\n<h3 id=\"redirection\">Redirection</h3>\n\n<pre><code class=\"language-bash\">python hello.py &gt; output.txt   # stdout to (file)\npython hello.py &gt;&gt; output.txt  # stdout to (file), append\npython hello.py 2&gt; error.log   # stderr to (file)\npython hello.py 2&gt;&amp;1           # stderr to stdout\npython hello.py 2&gt;/dev/null    # stderr to (null)\npython hello.py &amp;&gt;/dev/null    # stdout and stderr to (null)\n</code></pre>\n\n<pre><code class=\"language-bash\">python hello.py &lt; foo.txt      # feed foo.txt to stdin for python\n</code></pre>\n\n<h3 id=\"inspecting-commands\">Inspecting commands</h3>\n\n<pre><code class=\"language-bash\">command -V cd\n#=&gt; \"cd is a function/alias/whatever\"\n</code></pre>\n\n<h3 id=\"trap-errors\">Trap errors</h3>\n\n<pre><code class=\"language-bash\">trap 'echo Error at about $LINENO' ERR\n</code></pre>\n\n<p>or</p>\n\n<pre><code class=\"language-bash\">traperr() {\n  echo \"ERROR: ${BASH_SOURCE[1]} at about ${BASH_LINENO[0]}\"\n}\n\nset -o errtrace\ntrap traperr ERR\n</code></pre>\n\n<h3 id=\"caseswitch\">Case/switch</h3>\n\n<pre><code class=\"language-bash\">case \"$1\" in\n  start | up)\n    vagrant up\n    ;;\n\n  *)\n    echo \"Usage: $0 {start|stop|ssh}\"\n    ;;\nesac\n</code></pre>\n\n<h3 id=\"source-relative\">Source relative</h3>\n\n<pre><code class=\"language-bash\">source \"${0%/*}/../share/foo.sh\"\n</code></pre>\n\n<h3 id=\"printf\">printf</h3>\n\n<pre><code class=\"language-bash\">printf \"Hello %s, I'm %s\" Sven Olga\n#=&gt; \"Hello Sven, I'm Olga\n\nprintf \"1 + 1 = %d\" 2\n#=&gt; \"1 + 1 = 2\"\n\nprintf \"This is how you print a float: %f\" 2\n#=&gt; \"This is how you print a float: 2.000000\"\n</code></pre>\n\n<h3 id=\"directory-of-script\">Directory of script</h3>\n\n<pre><code class=\"language-bash\">DIR=\"${0%/*}\"\n</code></pre>\n\n<h3 id=\"getting-options\">Getting options</h3>\n\n<pre><code class=\"language-bash\">while [[ \"$1\" =~ ^- &amp;&amp; ! \"$1\" == \"--\" ]]; do case $1 in\n  -V | --version )\n    echo $version\n    exit\n    ;;\n  -s | --string )\n    shift; string=$1\n    ;;\n  -f | --flag )\n    flag=1\n    ;;\nesac; shift; done\nif [[ \"$1\" == '--' ]]; then shift; fi\n</code></pre>\n\n<h3 id=\"heredoc\">Heredoc</h3>\n\n<pre><code class=\"language-sh\">cat &lt;&lt;END\nhello world\nEND\n</code></pre>\n\n<h3 id=\"reading-input\">Reading input</h3>\n\n<pre><code class=\"language-bash\">echo -n \"Proceed? [y/n]: \"\nread ans\necho $ans\n</code></pre>\n\n<pre><code class=\"language-bash\">read -n 1 ans    # Just one character\n</code></pre>\n\n<h3 id=\"special-variables\">Special variables</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>$?</code></td>\n      <td>Exit status of last task</td>\n    </tr>\n    <tr>\n      <td><code>$!</code></td>\n      <td>PID of last background task</td>\n    </tr>\n    <tr>\n      <td><code>$$</code></td>\n      <td>PID of shell</td>\n    </tr>\n    <tr>\n      <td><code>$0</code></td>\n      <td>Filename of the shell script</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"http://wiki.bash-hackers.org/syntax/shellvars#special_parameters_and_shell_variables\">Special parameters</a>.</p>\n\n<h3 id=\"go-to-previous-directory\">Go to previous directory</h3>\n\n<pre><code class=\"language-bash\">pwd # /home/user/foo\ncd bar/\npwd # /home/user/foo/bar\ncd -\npwd # /home/user/foo\n</code></pre>\n\n<h3 id=\"check-for-commands-result\">Check for command’s result</h3>\n\n<pre><code class=\"language-bash\">if ping -c 1 google.com; then\n  echo \"It appears you have a working internet connection\"\nfi\n</code></pre>\n\n<h3 id=\"grep-check\">Grep check</h3>\n\n<pre><code class=\"language-bash\">if grep -q 'foo' ~/.bash_history; then\n  echo \"You appear to have typed 'foo' in the past\"\nfi\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"http://wiki.bash-hackers.org/\">Bash-hackers wiki</a> <em>(bash-hackers.org)</em></li>\n  <li><a href=\"http://wiki.bash-hackers.org/syntax/shellvars\">Shell vars</a> <em>(bash-hackers.org)</em></li>\n  <li><a href=\"https://learnxinyminutes.com/docs/bash/\">Learn bash in y minutes</a> <em>(learnxinyminutes.com)</em></li>\n  <li><a href=\"http://mywiki.wooledge.org/BashGuide\">Bash Guide</a> <em>(mywiki.wooledge.org)</em></li>\n  <li><a href=\"https://www.shellcheck.net/\">ShellCheck</a> <em>(shellcheck.net)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-07-05"
},{
  "id": "c_preprocessor",
  "title": "C Preprocessor",
  "url": "/c_preprocessor",
  "category": "C-like",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"compiling\">Compiling</h3>\n\n<pre><code>$ cpp -P file &gt; outfile\n</code></pre>\n\n<h3 id=\"includes\">Includes</h3>\n\n<pre><code>#include \"file\"\n</code></pre>\n\n<h3 id=\"defines\">Defines</h3>\n\n<pre><code>#define FOO\n#define FOO \"hello\"\n\n#undef FOO\n</code></pre>\n\n<h3 id=\"if\">If</h3>\n\n<pre><code>#ifdef DEBUG\n  console.log('hi');\n#elif defined VERBOSE\n  ...\n#else\n  ...\n#endif\n</code></pre>\n\n<h3 id=\"error\">Error</h3>\n\n<pre><code>#if VERSION == 2.0\n  #error Unsupported\n  #warning Not really supported\n#endif\n</code></pre>\n\n<h3 id=\"macro\">Macro</h3>\n\n<pre><code>#define DEG(x) ((x) * 57.29)\n</code></pre>\n\n<h3 id=\"token-concat\">Token concat</h3>\n\n<pre><code>#define DST(name) name##_s name##_t\nDST(object);   #=&gt; \"object_s object_t;\"\n</code></pre>\n\n<h3 id=\"file-and-line\">file and line</h3>\n\n<pre><code>#define LOG(msg) console.log(__FILE__, __LINE__, msg)\n#=&gt; console.log(\"file.txt\", 3, \"hey\")\n</code></pre>",
  "intro_html": "<p>Quick reference for the <a href=\"https://en.m.wikipedia.org/wiki/C_preprocessor\">C macro preprocessor</a>, which can be used independent of C/C++.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "cheatsheet-styles",
  "title": "Cheatsheet styles",
  "url": "/cheatsheet-styles",
  "category": "Others",
  "keywords": null,
  "content_html": "<h2 id=\"intro\">Intro</h2>\n\n<h2 class=\"-three-column\" id=\"variants\">Variants</h2>\n\n<h3 id=\"h2-sections\">H2 sections</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-one-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-two-column</code></td>\n      <td><em>(default)</em></td>\n    </tr>\n    <tr>\n      <td><code>-three-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-left-reference</code></td>\n      <td>3 columns<br /><em>(short first column)</em></td>\n    </tr>\n    <tr>\n      <td><code>-no-hide</code></td>\n      <td>Don’t hide H2</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#two-columns\">H2 sections</a></p>\n\n<h3 id=\"h3-sections\">H3 sections</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-prime</code></td>\n      <td>Highlight</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#h3-sections-1\">H3 sections</a></p>\n\n<h3 id=\"tables\">Tables</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-bold-first</code></td>\n      <td>Bold first column</td>\n    </tr>\n    <tr>\n      <td><code>-headers</code></td>\n      <td>Show headers</td>\n    </tr>\n    <tr>\n      <td><code>-left-align</code></td>\n      <td>Don’t right align last column</td>\n    </tr>\n    <tr>\n      <td><code>-mute-em</code></td>\n      <td>Lower opacity for italics</td>\n    </tr>\n    <tr>\n      <td><code>-no-wrap</code></td>\n      <td>Don’t wrap text</td>\n    </tr>\n    <tr>\n      <td><code>-shortcuts</code></td>\n      <td>Shortcut keys</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#tables-1\">Tables</a></p>\n\n<h3 id=\"code\">Code</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-box-chars</code></td>\n      <td>Less line height<br /><em>for box drawing chars</em></td>\n    </tr>\n    <tr>\n      <td><code>-setup</code></td>\n      <td>Gray background</td>\n    </tr>\n    <tr>\n      <td><code>-wrap</code></td>\n      <td>Enables line-wrapping</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#code-1\">Code</a></p>\n\n<h3 id=\"paragraphs\">Paragraphs</h3>\n\n<table class=\"-gray\">\n  <tbody>\n    <tr>\n      <td><code>-setup</code></td>\n      <td>Gray background</td>\n    </tr>\n    <tr>\n      <td><code>-crosslink</code></td>\n      <td>Has arrow on the link</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#paragraphs-1\">Paragraphs</a></p>\n\n<h3 id=\"lists\">Lists</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>-also-see</code></td>\n      <td>Lighter background</td>\n    </tr>\n    <tr>\n      <td><code>-four-column</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-six-column</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <a href=\"#lists-1\">Lists</a></p>\n\n<h3 class=\"-prime\" id=\"adding-variants\">Adding variants</h3>\n\n<pre><code>## Section\n{: .-two-column}\n</code></pre>\n\n<p>Devhints uses Kramdown, and supports adding classes via Kramdown’s syntax.</p>\n\n<h2 class=\"-three-column\" id=\"h3-sections-1\">H3 sections</h2>\n\n<h3 id=\"supported\">Supported</h3>\n\n<p>Each section can have the following children:</p>\n\n<h4 id=\"white\">White</h4>\n\n<ul>\n  <li><code>pre</code></li>\n  <li><code>ul</code></li>\n  <li><code>table</code></li>\n</ul>\n\n<h4 id=\"gray\">Gray</h4>\n\n<ul>\n  <li><code>p</code></li>\n  <li><code>h4</code></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"prime-section\">Prime section</h3>\n\n<p>This is a section with <code>{: .-prime}</code>. Notice the fancy highlight! Great for “getting started” kind of snippets.</p>\n\n<h3 id=\"h3-section\">H3 section</h3>\n\n<p>Every box is an H3 section. The box will encompass everything inside the body of the H3.</p>\n\n<p>This is a basic section with paragraphs in it.</p>\n\n<h2 class=\"-three-column\" id=\"code-1\">Code</h2>\n\n<h3 id=\"basic-code\">Basic code</h3>\n\n<pre><code class=\"language-js\">here.is(() =&gt; {\n  some.code()\n})\n</code></pre>\n\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n\n<p>Code blocks can be placed one after the other.</p>\n\n<p>See: <a href=\"/\">Cheatsheets</a></p>\n\n<h3 id=\"code-with-headings\">Code with headings</h3>\n\n<h4 class=\"-file\" id=\"indexjs\">index.js</h4>\n\n<pre><code class=\"language-js\">here.is(() =&gt; {\n  some.code()\n})\n</code></pre>\n\n<h4 class=\"-file\" id=\"otherjs\">other.js</h4>\n\n<pre><code class=\"language-js\">here.is.some.more()\n</code></pre>\n\n<p>Code blocks can have headings.</p>\n\n<h3 id=\"highlighted-lines\">Highlighted lines</h3>\n\n<pre data-line=\"3\"><code class=\"language-js\">app.start(() =&gt; {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n\n<p>Add <code>{: data-line=\"3\"}</code> to add line highlights.</p>\n\n<h3 id=\"multiple-highlights\">Multiple highlights</h3>\n\n<pre data-line=\"2,3\"><code class=\"language-js\">app.start(() =&gt; {\n  const port = app.server.port\n  console.log(`Started at ${port}`)\n})\n</code></pre>\n\n<p>Add <code>{: data-line=\"2,3\"}</code> to add multiple line highlights.</p>\n\n<h3 id=\"setup-blocks\">Setup blocks</h3>\n\n<pre class=\"-setup\"><code class=\"language-js\">import React from 'react'\n</code></pre>\n\n<pre><code class=\"language-js\">class Hello extends React.Component {\n  render () {\n    return &lt;span&gt;Hello&lt;/span&gt;\n  }\n}\n</code></pre>\n\n<p>Add <code>{: .-setup}</code> to a <code>pre</code> or <code>table</code> or <code>ul</code>.</p>\n\n<h3 id=\"long-lines\">Long lines</h3>\n\n<pre><code class=\"language-js\">function createNode(nodeName: string, options: { key: string }) {\n  return true\n}\n</code></pre>\n\n<p>Long lines will have scrollbars.</p>\n\n<h3 id=\"line-wrapping\">Line wrapping</h3>\n\n<pre class=\"-wrap\"><code class=\"language-js\">&lt;script&gt;(function(d,s){if(window.Promise&amp;&amp;[].includes&amp;&amp;Object.assign&amp;&amp;window.Map)return;var js,sc=d.getElementsByTagName(s)[0];js=d.createElement(s);js.src='https://cdn.polyfill.io/v2/polyfill.min.js';sc.parentNode.insertBefore(js, sc);}(document,'script'))&lt;/script&gt;\n</code></pre>\n\n<p>Add <code>-wrap</code> to wrap long lines.</p>\n\n<h2 class=\"-three-column\" id=\"lists-1\">Lists</h2>\n\n<h3 id=\"lists-2\">Lists</h3>\n\n<ul>\n  <li>This is</li>\n  <li>a list</li>\n  <li>with a few items</li>\n</ul>\n\n<p>Here’s an extra paragraph after the list.</p>\n\n<h3 id=\"lists-with-headings\">Lists with headings</h3>\n\n<h4 id=\"part-1\">Part 1</h4>\n\n<ul>\n  <li><code>createElement()</code></li>\n  <li><code>componentDidMount()</code></li>\n  <li><code>componentWillUnmount()</code></li>\n</ul>\n\n<h4 id=\"part-2\">Part 2</h4>\n\n<ul>\n  <li><code>shouldComponentUpdate()</code></li>\n  <li><code>componentWillReceiveProps()</code></li>\n</ul>\n\n<p>Here’s an extra paragraph after the list.</p>\n\n<h2 class=\"-one-column\" id=\"list-columns\">List columns</h2>\n\n<h3 id=\"six-columns\">Six columns</h3>\n\n<ul class=\"-six-column\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n  <li>Eleven</li>\n</ul>\n\n<p>Add <code>{: .-six-column}</code> to make large lists.</p>\n\n<h3 id=\"four-columns\">Four columns</h3>\n\n<ul class=\"-four-column\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n  <li>Eleven</li>\n</ul>\n\n<p>Add <code>{: .-four-column}</code> to make large lists.</p>\n\n<h3 id=\"also-see\">Also see</h3>\n\n<ul class=\"-also-see\">\n  <li>One</li>\n  <li>Two</li>\n  <li>Three</li>\n  <li>Four</li>\n  <li>Five</li>\n  <li>Six</li>\n  <li>Seven</li>\n  <li>Eight</li>\n  <li>Nine</li>\n  <li>Ten</li>\n</ul>\n\n<p>Add <code>{: .-also-see}</code>.</p>\n\n<h2 class=\"-three-column\" id=\"paragraphs-1\">Paragraphs</h2>\n\n<h3 id=\"basic-paragraphs\">Basic paragraphs</h3>\n\n<p>This is a basic section with paragraphs in it. When paragraphs are the first elements in an H3 section’s body, they appear as white.</p>\n\n<h3 id=\"basic-paragraphs-1\">Basic paragraphs</h3>\n\n<pre><code>···\n</code></pre>\n\n<p>When paragraphs appear after <code>pre</code>/<code>table</code>/<code>ul</code>, they appear with a gray background.</p>\n\n<h3 id=\"preludes\">Preludes</h3>\n\n<p class=\"-setup\">Here’s a prelude paragraph. Add <code>{: .-setup}</code> to make paragraphs appear with a gray background.</p>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"crosslink\">Crosslink</h3>\n\n<p>Add <code>{: .-crosslink}</code> to make big loud external links:</p>\n\n<pre><code>···\n</code></pre>\n\n<p class=\"-crosslink\"><a href=\"/\">Home</a></p>\n\n<h2 class=\"-three-column\" id=\"tables-1\">Tables</h2>\n\n<h3 id=\"basic-table\">Basic table</h3>\n\n<h4 id=\"date\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%m/%d/%Y</code></td>\n      <td><code>06/05/2013</code></td>\n    </tr>\n    <tr>\n      <td><code>%A, %B %e, %Y</code></td>\n      <td><code>Sunday, June 5, 2013</code></td>\n    </tr>\n    <tr>\n      <td><code>%b %e %a</code></td>\n      <td><code>Jun 5 Sun</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"time\">Time</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%H:%M</code></td>\n      <td><code>23:05</code></td>\n    </tr>\n    <tr>\n      <td><code>%I:%M %p</code></td>\n      <td><code>11:05 PM</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>This is a basic table with h4’s.</p>\n\n<h3 id=\"shortcuts\">Shortcuts</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>V</code></td>\n      <td>Vector</td>\n    </tr>\n    <tr>\n      <td><code>P</code></td>\n      <td>Pencil</td>\n    </tr>\n    <tr>\n      <td><code>T</code></td>\n      <td>Text</td>\n    </tr>\n    <tr>\n      <td><code>L</code></td>\n      <td>Line</td>\n    </tr>\n    <tr>\n      <td><code>R</code></td>\n      <td>Rectangle</td>\n    </tr>\n    <tr>\n      <td><code>O</code></td>\n      <td>Oval</td>\n    </tr>\n    <tr>\n      <td><code>U</code></td>\n      <td>Rounded</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Add <code>{: .-shortcuts}</code> to tables.</p>\n\n<h3 id=\"with-headers\">With headers</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Prefix</th>\n      <th>Example</th>\n      <th>What</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>//</code></td>\n      <td><code>//hr[@class='edge']</code></td>\n      <td>Anywhere</td>\n    </tr>\n    <tr>\n      <td><code>./</code></td>\n      <td><code>./a</code></td>\n      <td>Relative</td>\n    </tr>\n    <tr>\n      <td><code>/</code></td>\n      <td><code>/html/body/div</code></td>\n      <td>Root</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Add <code>{: .-headers}</code> to add headers.</p>\n\n<h2 id=\"two-columns\">Two columns</h2>\n\n<h3 id=\"one\">One</h3>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"two\">Two</h3>\n\n<pre><code>···\n</code></pre>\n\n<h2 class=\"-left-reference\" id=\"left-reference\">Left reference</h2>\n\n<h3 id=\"one-1\">One</h3>\n\n<pre><code>···\n···\n···\n···\n···\n···\n···\n···\n</code></pre>\n\n<h3 id=\"two-1\">Two</h3>\n\n<pre><code>···\n</code></pre>\n\n<h3 id=\"three\">Three</h3>\n\n<pre><code>···\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"one-column\">One column</h2>\n\n<h3 id=\"one-2\">One</h3>\n\n<pre><code>···\n</code></pre>",
  "intro_html": "<p>This is a reference of styles that you can use on Devhints cheatsheets. How\nmeta!\nYou can refer to this when contributing your own cheatsheets to the <a href=\"https://github.com/rstacruz/cheatsheets/\">GitHub repo</a>.</p>",
  "description_html": "",
  "tags": ["WIP"],
  "updated": "2017-10-26"
},{
  "id": "command_line",
  "title": "Command line stuff",
  "url": "/command_line",
  "category": "Others",
  "keywords": null,
  "content_html": "<h2 id=\"list-ls\">List (ls)</h2>\n\n<pre><code>ls [options] [paths]\n</code></pre>\n\n<h3 id=\"format\">Format</h3>\n\n<table class=\"shortcuts\">\n  <thead>\n    <tr>\n      <th>Switch</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-1</code></td>\n      <td>One entry per line</td>\n    </tr>\n    <tr>\n      <td><code>-l</code></td>\n      <td>Long view</td>\n    </tr>\n    <tr>\n      <td><code>-o</code></td>\n      <td>Long view (without groups)</td>\n    </tr>\n    <tr>\n      <td><code>-C</code></td>\n      <td>Multicolumn (sorted horizontally)</td>\n    </tr>\n    <tr>\n      <td><code>-x</code></td>\n      <td>Multicolumn (sorted vertically)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-F</code></td>\n      <td>Add / after directories</td>\n    </tr>\n    <tr>\n      <td><code>-G</code></td>\n      <td>Color</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"options\">Options</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-R</code></td>\n      <td>Recurse</td>\n    </tr>\n    <tr>\n      <td><code>-a</code></td>\n      <td>Include hidden (dotfiles)</td>\n    </tr>\n    <tr>\n      <td><code>-A</code></td>\n      <td>Include hidden (but not . and ..)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"sorting\">Sorting</h3>\n\n<table class=\"shortcuts\">\n  <thead>\n    <tr>\n      <th>Switch</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-r</code></td>\n      <td>reverse order</td>\n    </tr>\n    <tr>\n      <td><code>-S</code></td>\n      <td>sort by size</td>\n    </tr>\n    <tr>\n      <td><code>-t</code></td>\n      <td>sort by time modified</td>\n    </tr>\n    <tr>\n      <td><code>-u</code></td>\n      <td>sort by time accessed</td>\n    </tr>\n    <tr>\n      <td><code>-U</code></td>\n      <td>sort by time created</td>\n    </tr>\n    <tr>\n      <td><code>-c</code></td>\n      <td>sort by time status was changed</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-h</code></td>\n      <td>Human-readable size (3k)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h2 id=\"tail\">Tail</h2>\n\n<pre><code>tail [-F | -f | -r] [-bN | -cN | -nN] [file ...]\n</code></pre>\n\n<h3 id=\"modes\">Modes</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-f</code></td>\n      <td>follow</td>\n    </tr>\n    <tr>\n      <td><code>-F</code></td>\n      <td>follow by filename (accounts for log rotation)</td>\n    </tr>\n    <tr>\n      <td><code>-r</code></td>\n      <td>Reverse order</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"options-1\">Options</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-bN</code></td>\n      <td>N*512 bytes</td>\n    </tr>\n    <tr>\n      <td><code>-cN</code></td>\n      <td>N bytes</td>\n    </tr>\n    <tr>\n      <td><code>-nN</code></td>\n      <td>N lines</td>\n    </tr>\n    <tr>\n      <td><code>+N</code></td>\n      <td>Start from line N</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h2 id=\"sudo\">Sudo</h2>\n\n<pre><code>sudo [options] &lt;command&gt;\n</code></pre>\n\n<h3 id=\"listing\">Listing</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-l</code></td>\n      <td>List allowed commands</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"options-2\">Options</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-A</code></td>\n      <td>Use $SUDO_ASKPASS</td>\n    </tr>\n    <tr>\n      <td><code>-b</code></td>\n      <td>Run in background</td>\n    </tr>\n    <tr>\n      <td><code>-E</code></td>\n      <td>Preserve environment</td>\n    </tr>\n    <tr>\n      <td><code>-H</code></td>\n      <td>use target’s $HOME</td>\n    </tr>\n    <tr>\n      <td><code>-n</code></td>\n      <td>Don’t prompt for password</td>\n    </tr>\n    <tr>\n      <td><code>-P</code></td>\n      <td>Preserve group vector</td>\n    </tr>\n    <tr>\n      <td><code>-S</code></td>\n      <td>Read password from stdin</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"file-descriptors\">File descriptors</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-C fd</code></td>\n      <td>Close all open file descriptors</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"prompt\">Prompt</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-p prompt</code></td>\n      <td>Custom prompt (-p “%p password:”)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"interactive\">Interactive</h3>\n\n<table class=\"shortcuts\">\n  <thead>\n    <tr>\n      <th>Switch</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-i [cmd]</code></td>\n      <td>Interactive shell without variables</td>\n    </tr>\n    <tr>\n      <td><code>-s [cmd]</code></td>\n      <td>Interactive shell</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-u user</code></td>\n      <td>run as this user</td>\n    </tr>\n    <tr>\n      <td><code>-g group</code></td>\n      <td>run as this group</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"timestamp\">Timestamp</h3>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-v</code></td>\n      <td>revalidate timestamp for 5 mins</td>\n    </tr>\n    <tr>\n      <td><code>-k</code></td>\n      <td>invalidate timestamp</td>\n    </tr>\n    <tr>\n      <td><code>-K</code></td>\n      <td>just like -k</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h2 id=\"wc-word-count\">wc (Word count)</h2>\n\n<pre><code>... | wc [options]\n</code></pre>\n\n<table class=\"shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>-c</code></td>\n      <td>Bytes</td>\n    </tr>\n    <tr>\n      <td><code>-l</code></td>\n      <td>Lines</td>\n    </tr>\n    <tr>\n      <td><code>-m</code></td>\n      <td>Characters (incl multi-byte)</td>\n    </tr>\n    <tr>\n      <td><code>-w</code></td>\n      <td>Words</td>\n    </tr>\n  </tbody>\n</table>\n\n<p><br /></p>\n\n<h2 id=\"search-and-replace-in-all-files\">Search-and-replace in all files</h2>\n\n<pre><code>perl -p -i -e 's/hello/HELLO/g' **/*\n</code></pre>\n\n<p><br /></p>\n\n<h2 id=\"grep\">Grep</h2>\n\n<pre><code>grep [options] [pattern] [file ...]\n</code></pre>\n\n<h3 id=\"options-3\">Options</h3>\n\n<table class=\"shortcuts\">\n  <thead>\n    <tr>\n      <th>Switch</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-A num</code></td>\n      <td>Print <code>num</code> lines of training context</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-G</code></td>\n      <td>–basic-regexp (default)</td>\n    </tr>\n    <tr>\n      <td><code>-E</code></td>\n      <td>–extended-regexp</td>\n    </tr>\n    <tr>\n      <td><code>-P</code></td>\n      <td>–perl-regexp</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-f file</code></td>\n      <td>–file (Get patterns for file)</td>\n    </tr>\n    <tr>\n      <td><code>-F</code></td>\n      <td>–fixed-strings</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-h</code></td>\n      <td>–no-filename</td>\n    </tr>\n    <tr>\n      <td><code>-H</code></td>\n      <td>–with-filename</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-l</code></td>\n      <td>–files-with-matches (just print filenames)</td>\n    </tr>\n    <tr>\n      <td><code>-L</code></td>\n      <td>–files-without-match</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>-r, -R</code></td>\n      <td>–recursive</td>\n    </tr>\n    <tr>\n      <td><code>-v</code></td>\n      <td>–invert-match</td>\n    </tr>\n    <tr>\n      <td><code>-i</code></td>\n      <td>–ignore-case</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"synonyms\">Synonyms</h3>\n\n<pre><code>egrep  =&gt;  grep -E\nfgrep  =&gt;  grep -F\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "curl",
  "title": "Curl",
  "url": "/curl",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h2 id=\"options\">Options</h2>\n\n<h3 id=\"options-1\">Options</h3>\n\n<pre><code class=\"language-bash\">-o &lt;file&gt;    # --output: write to file\n-u user:pass # --user: Authentication\n</code></pre>\n\n<pre><code class=\"language-bash\">-v           # --verbose\n-vv          # Even more verbose\n-s           # --silent\n</code></pre>\n\n<pre><code class=\"language-bash\">-i           # --include: Include the HTTP-header in the output\n-I           # --head: headers only\n</code></pre>\n\n<h3 id=\"request\">Request</h3>\n\n<pre><code class=\"language-bash\">-X POST          # --request\n-L               # follow link if page redirects \n</code></pre>\n\n<h3 id=\"data\">Data</h3>\n\n<pre><code class=\"language-bash\">-d 'data'    # --data: HTTP post data, URL encoded (eg, status=\"Hello\")\n-d @file     # --data via file\n-G           # --get: send -d data via get\n</code></pre>\n\n<h3 id=\"headers\">Headers</h3>\n\n<pre><code class=\"language-bash\">-A &lt;str&gt;         # --user-agent\n-b name=val      # --cookie\n-b FILE          # --cookie\n-H \"X-Foo: y\"    # --header\n--compressed     # use deflate/gzip\n</code></pre>\n\n<h3 id=\"ssl\">SSL</h3>\n\n<pre><code class=\"language-bash\">    --cacert &lt;file&gt;\n    --capath &lt;dir&gt;\n</code></pre>\n\n<pre><code class=\"language-bash\">-E, --cert &lt;cert&gt;     # --cert: Client cert file\n    --cert-type       # der/pem/eng\n-k, --insecure        # for self-signed certs\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"examples\">Examples</h2>\n\n<pre><code class=\"language-bash\"># Post data:\ncurl -d password=x http://x.com/y\n</code></pre>\n\n<pre><code class=\"language-bash\"># Auth/data:\ncurl -u user:pass -d status=\"Hello\" http://twitter.com/statuses/update.xml\n</code></pre>\n\n<pre><code class=\"language-bash\"># multipart file upload\ncurl -v -include --form key1=value1 --form upload=@localfilename URL\n</code></pre>\n\n<pre><code class=\"language-bash\"># Use Curl to Check if a remote resource is available\n# details: https://matthewsetter.com/check-if-file-is-available-with-curl/\ncurl -o /dev/null --silent -Iw \"%{http_code}\" https://example.com/my.remote.tarball.gz\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-03-09"
},{
  "id": "docker-compose",
  "title": "docker-compose",
  "url": "/docker-compose",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h3 id=\"basic-example\">Basic example</h3>\n\n<pre><code class=\"language-yaml\"># docker-compose.yml\nversion: '2'\n\nservices:\n  web:\n    build: .\n    # build from Dockerfile\n    context: ./Path\n    dockerfile: Dockerfile\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: redis\n</code></pre>\n\n<h3 id=\"commands\">Commands</h3>\n\n<pre><code class=\"language-sh\">docker-compose start\ndocker-compose stop\n</code></pre>\n\n<pre><code class=\"language-sh\">docker-compose pause\ndocker-compose unpause\n</code></pre>\n\n<pre><code class=\"language-sh\">docker-compose ps\ndocker-compose up\ndocker-compose down\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"building\">Building</h3>\n\n<pre><code class=\"language-yaml\">web:\n  # build from Dockerfile\n  build: .\n  args:     # Add build arguments\n    APP_HOME: app\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # build from custom Dockerfile\n  build:\n    context: ./dir\n    dockerfile: Dockerfile.dev\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # build from image\n  image: ubuntu\n  image: ubuntu:14.04\n  image: tutum/influxdb\n  image: example-registry:4000/postgresql\n  image: a4bc65fd\n</code></pre>\n\n<h3 id=\"ports\">Ports</h3>\n\n<pre><code class=\"language-yaml\">  ports:\n    - \"3000\"\n    - \"8000:80\"  # host:container\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # expose ports to linked services (not to host)\n  expose: [\"3000\"]\n</code></pre>\n\n<h3 id=\"commands-1\">Commands</h3>\n\n<pre><code class=\"language-yaml\">  # command to execute\n  command: bundle exec thin -p 3000\n  command: [bundle, exec, thin, -p, 3000]\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # override the entrypoint\n  entrypoint: /app/start.sh\n  entrypoint: [php, -d, vendor/bin/phpunit]\n</code></pre>\n\n<h3 id=\"environment-variables\">Environment variables</h3>\n\n<pre><code class=\"language-yaml\">  # environment vars\n  environment:\n    RACK_ENV: development\n  environment:\n    - RACK_ENV=development\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # environment vars from file\n  env_file: .env\n  env_file: [.env, .development.env]\n</code></pre>\n\n<h3 id=\"dependencies\">Dependencies</h3>\n\n<pre><code class=\"language-yaml\">  # makes the `db` service available as the hostname `database`\n  # (implies depends_on)\n  links:\n    - db:database\n    - redis\n</code></pre>\n\n<pre><code class=\"language-yaml\">  # make sure `db` is alive before starting\n  depends_on:\n    - db\n</code></pre>\n\n<h3 id=\"other-options\">Other options</h3>\n\n<pre><code class=\"language-yaml\">  # make this service extend another\n  extends:\n    file: common.yml  # optional\n    service: webapp\n</code></pre>\n\n<pre><code class=\"language-yaml\">  volumes:\n    - /var/lib/mysql\n    - ./_data:/var/lib/mysql\n</code></pre>\n\n<h2 class=\"-three-column\" id=\"advanced-features\">Advanced features</h2>\n\n<h3 id=\"labels\">Labels</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    labels:\n      com.example.description: \"Accounting web app\"\n</code></pre>\n\n<h3 id=\"dns-servers\">DNS servers</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    dns: 8.8.8.8\n    dns:\n      - 8.8.8.8\n      - 8.8.4.4\n</code></pre>\n\n<h3 id=\"devices\">Devices</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    devices:\n    - \"/dev/ttyUSB0:/dev/ttyUSB0\"\n</code></pre>\n\n<h3 id=\"external-links\">External links</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    external_links:\n      - redis_1\n      - project_db_1:mysql\n</code></pre>\n\n<h3 id=\"hosts\">Hosts</h3>\n\n<pre><code class=\"language-yaml\">services:\n  web:\n    extra_hosts:\n      - \"somehost:192.168.1.100\"\n</code></pre>\n\n<h3 id=\"network\">Network</h3>\n\n<pre><code class=\"language-yaml\"># creates a custom network called `frontend`\nnetworks:\n  frontend:\n</code></pre>\n\n<h3 id=\"external-network\">External network</h3>\n\n<pre><code class=\"language-yaml\"># join a pre-existing network\nnetworks:\n  default:\n    external:\n      name: frontend\n</code></pre>\n\n<h3 id=\"volume\">Volume</h3>\n\n<pre><code class=\"language-yaml\"># Mount host paths or named volumes, specified as sub-options to a service\n  db:\n    image: postgres:latest\n    volumes:\n      - \"/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock\"\n      - \"dbdata:/var/lib/postgresql/data\"\n\nvolumes:\n  dbdata:\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-01-01"
},{
  "id": "docker",
  "title": "Docker CLI",
  "url": "/docker",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h2 id=\"manage-images\">Manage images</h2>\n\n<h3 id=\"docker-build\"><code>docker build</code></h3>\n\n<pre><code class=\"language-yml\">docker build [options] .\n  -t \"app/container_name\"    # name\n  --build-arg APP_HOME=$APP_HOME    # Set build-time variables\n</code></pre>\n\n<p>Create an <code>image</code> from a Dockerfile.</p>\n\n<h3 id=\"docker-run\"><code>docker run</code></h3>\n\n<pre><code class=\"language-yml\">docker run [options] IMAGE\n  # see `docker create` for options\n</code></pre>\n\n<h4 id=\"example\">Example</h4>\n\n<pre><code>$ docker run -it debian:buster /bin/bash\n</code></pre>\n<p>Run a command in an <code>image</code>.</p>\n\n<h2 id=\"manage-containers\">Manage containers</h2>\n\n<h3 id=\"docker-create\"><code>docker create</code></h3>\n\n<pre><code class=\"language-yml\">docker create [options] IMAGE\n  -a, --attach               # attach stdout/err\n  -i, --interactive          # attach stdin (interactive)\n  -t, --tty                  # pseudo-tty\n      --name NAME            # name your image\n  -p, --publish 5000:5000    # port map\n      --expose 5432          # expose a port to linked containers\n  -P, --publish-all          # publish all ports\n      --link container:alias # linking\n  -v, --volume `pwd`:/app    # mount (absolute paths needed)\n  -e, --env NAME=hello       # env vars\n</code></pre>\n\n<h4 id=\"example-1\">Example</h4>\n\n<pre><code>$ docker create --name app_redis_1 \\\n  --expose 6379 \\\n  redis:3.0.2\n</code></pre>\n\n<p>Create a <code>container</code> from an <code>image</code>.</p>\n\n<h3 id=\"docker-exec\"><code>docker exec</code></h3>\n\n<pre><code class=\"language-yml\">docker exec [options] CONTAINER COMMAND\n  -d, --detach        # run in background\n  -i, --interactive   # stdin\n  -t, --tty           # interactive\n</code></pre>\n\n<h4 id=\"example-2\">Example</h4>\n\n<pre><code>$ docker exec app_web_1 tail logs/development.log\n$ docker exec -t -i app_web_1 rails c\n</code></pre>\n\n<p>Run commands in a <code>container</code>.</p>\n\n<h3 id=\"docker-start\"><code>docker start</code></h3>\n\n<pre><code class=\"language-yml\">docker start [options] CONTAINER\n  -a, --attach        # attach stdout/err\n  -i, --interactive   # attach stdin\n\ndocker stop [options] CONTAINER\n</code></pre>\n\n<p>Start/stop a <code>container</code>.</p>\n\n<h3 id=\"docker-ps\"><code>docker ps</code></h3>\n\n<pre><code>$ docker ps\n$ docker ps -a\n$ docker kill $ID\n</code></pre>\n\n<p>Manage <code>container</code>s using ps/kill.</p>\n\n<h3 id=\"docker-logs\"><code>docker logs</code></h3>\n\n<pre><code>$ docker logs $ID\n$ docker logs $ID 2&gt;&amp;1 | less\n$ docker logs -f $ID # Follow log output\n</code></pre>\n\n<p>See what’s being logged in an <code>container</code>.</p>\n\n<h2 id=\"images\">Images</h2>\n\n<h3 id=\"docker-images\"><code>docker images</code></h3>\n\n<pre><code class=\"language-sh\">$ docker images\n  REPOSITORY   TAG        ID\n  ubuntu       12.10      b750fe78269d\n  me/myapp     latest     7b2431a8d968\n</code></pre>\n\n<pre><code class=\"language-sh\">$ docker images -a   # also show intermediate\n</code></pre>\n\n<p>Manages <code>image</code>s.</p>\n\n<h3 id=\"docker-rmi\"><code>docker rmi</code></h3>\n\n<pre><code class=\"language-yml\">docker rmi b750fe78269d\n</code></pre>\n\n<p>Deletes <code>image</code>s.</p>\n\n<h2 id=\"clean-up\">Clean up</h2>\n\n<h3 id=\"clean-all\">Clean all</h3>\n\n<pre><code class=\"language-sh\">docker system prune\n</code></pre>\n\n<p>Cleans up dangling images, containers, volumes, and networks (ie, not associated with a container)</p>\n\n<pre><code class=\"language-sh\">docker system prune -a\n</code></pre>\n\n<p>Additionally remove any stopped containers and all unused images (not just dangling images)</p>\n\n<h3 id=\"containers\">Containers</h3>\n\n<pre><code class=\"language-sh\"># Stop all running containers\ndocker stop $(docker ps -a -q)\n\n# Delete stopped containers\ndocker container prune\n</code></pre>\n\n<h3 id=\"images-1\">Images</h3>\n\n<pre><code class=\"language-sh\">docker image prune [-a]\n</code></pre>\n\n<p>Delete all the images</p>\n\n<h3 id=\"volumes\">Volumes</h3>\n\n<pre><code class=\"language-sh\">docker volume prune\n</code></pre>\n\n<p>Delete all the volumes</p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"http://www.docker.io/gettingstarted/\">Getting Started</a> <em>(docker.io)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "dockerfile",
  "title": "Dockerfile",
  "url": "/dockerfile",
  "category": "Devops",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"inheritance\">Inheritance</h3>\n\n<pre><code class=\"language-docker\">FROM ruby:2.2.2\n</code></pre>\n\n<h3 id=\"variables\">Variables</h3>\n\n<pre><code class=\"language-docker\">ENV APP_HOME /myapp\nRUN mkdir $APP_HOME\n</code></pre>\n\n<pre><code class=\"language-docker\">ARG APP_HOME=\"\"\nRUN mkdir $APP_HOME\n</code></pre>\n\n<h3 id=\"initialization\">Initialization</h3>\n\n<pre><code class=\"language-docker\">RUN bundle install\n</code></pre>\n\n<pre><code class=\"language-docker\">WORKDIR /myapp\n</code></pre>\n\n<pre><code class=\"language-docker\">VOLUME [\"/data\"]\n# Specification for mount point\n</code></pre>\n\n<pre><code class=\"language-docker\">ADD file.xyz /file.xyz\nCOPY --chown=user:group host_file.xyz /path/container_file.xyz\n</code></pre>\n\n<h3 id=\"onbuild\">Onbuild</h3>\n\n<pre><code class=\"language-docker\">ONBUILD RUN bundle install\n# when used with another file\n</code></pre>\n\n<h3 id=\"commands\">Commands</h3>\n\n<pre><code class=\"language-docker\">EXPOSE 5900\nCMD    [\"bundle\", \"exec\", \"rails\", \"server\"]\n</code></pre>\n\n<h3 id=\"entrypoint\">Entrypoint</h3>\n\n<pre><code class=\"language-docker\">ENTRYPOINT [\"executable\", \"param1\", \"param2\"]\nENTRYPOINT command param1 param2\n</code></pre>\n\n<p>Configures a container that will run as an executable.</p>\n\n<pre><code class=\"language-docker\">ENTRYPOINT exec top -b\n</code></pre>\n\n<p>This will use shell processing to substitute shell variables, and will ignore any <code>CMD</code> or <code>docker run</code> command line arguments.</p>\n\n<h3 id=\"metadata\">Metadata</h3>\n\n<pre><code class=\"language-docker\">LABEL version=\"1.0\"\n</code></pre>\n\n<pre><code class=\"language-docker\">LABEL \"com.example.vendor\"=\"ACME Incorporated\"\nLABEL com.example.label-with-value=\"foo\"\n</code></pre>\n\n<pre><code class=\"language-docker\">LABEL description=\"This text illustrates \\\nthat label-values can span multiple lines.\"\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"see-also\">See also</h2>\n\n<ul>\n  <li><a href=\"https://docs.docker.com/engine/reference/builder/\">https://docs.docker.com/engine/reference/builder/</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-10-20"
},{
  "id": "find",
  "title": "Find",
  "url": "/find",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 class=\"-prime\" id=\"usage\">Usage</h3>\n\n<pre><code class=\"language-bash\">find &lt;path&gt; &lt;conditions&gt; &lt;actions&gt;\n</code></pre>\n\n<h3 id=\"conditions\">Conditions</h3>\n\n<pre><code class=\"language-bash\">-name \"*.c\"\n</code></pre>\n\n<pre><code class=\"language-bash\">-user jonathan\n-nouser\n</code></pre>\n\n<pre><code class=\"language-bash\">-type f            # File\n-type d            # Directory\n-type l            # Symlink\n</code></pre>\n\n<pre><code class=\"language-bash\">-depth 2           # At least 3 levels deep\n-regex PATTERN\n</code></pre>\n\n<pre><code class=\"language-bash\">-size 8            # Exactly 8 512-bit blocks \n-size -128c        # Smaller than 128 bytes\n-size 1440k        # Exactly 1440KiB\n-size +10M         # Larger than 10MiB\n-size +2G          # Larger than 2GiB\n</code></pre>\n\n<pre><code class=\"language-bash\">-newer   file.txt\n-newerm  file.txt        # modified newer than file.txt\n-newerX  file.txt        # [c]hange, [m]odified, [B]create\n-newerXt \"1 hour ago\"    # [t]imestamp\n</code></pre>\n\n<h3 id=\"access-time-conditions\">Access time conditions</h3>\n\n<pre><code class=\"language-bash\">-atime 0           # Last accessed between now and 24 hours ago\n-atime +0          # Accessed more than 24 hours ago\n-atime 1           # Accessed between 24 and 48 hours ago\n-atime +1          # Accessed more than 48 hours ago\n-atime -1          # Accessed less than 24 hours ago (same a 0)\n-ctime -6h30m      # File status changed within the last 6 hours and 30 minutes\n-mtime +1w         # Last modified more than 1 week ago\n</code></pre>\n\n<p>These conditions only work in MacOS and BSD-like systems (no GNU/Linux support).</p>\n\n<h3 id=\"condition-flow\">Condition flow</h3>\n\n<pre><code class=\"language-bash\">\\! -name \"*.c\"\n\\( x -or y \\)\n</code></pre>\n\n<h3 id=\"actions\">Actions</h3>\n\n<pre><code class=\"language-bash\">-exec rm {} \\;\n-print\n-delete\n</code></pre>\n\n<h3 id=\"examples\">Examples</h3>\n\n<pre><code class=\"language-bash\">find . -name '*.jpg'\nfind . -name '*.jpg' -exec rm {} \\;\n</code></pre>\n\n<pre><code class=\"language-bash\">find . -newerBt \"24 hours ago\"\n</code></pre>\n\n<pre><code class=\"language-bash\">find . -type f -mtime +29 # find files modified more than 30 days ago\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2019-11-17"
},{
  "id": "fish-shell",
  "title": "Fish shell",
  "url": "/fish-shell",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"keys\">Keys</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>Alt ←</code> <em>/</em> <code>Alt →</code></td>\n      <td>Move word</td>\n    </tr>\n    <tr>\n      <td><code>^U</code></td>\n      <td>Delete to beginning</td>\n    </tr>\n    <tr>\n      <td><code>^W</code></td>\n      <td>Delete to previous <code>/</code></td>\n    </tr>\n    <tr>\n      <td><code>^D</code></td>\n      <td>Delete next character</td>\n    </tr>\n    <tr>\n      <td><code>Alt D</code></td>\n      <td>Delete next word</td>\n    </tr>\n    <tr>\n      <td><code>^C</code></td>\n      <td>Cancel line</td>\n    </tr>\n    <tr>\n      <td><code>Alt P</code></td>\n      <td>Page output</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>Alt ↑</code> <em>/</em> <code>Alt ↓</code></td>\n      <td>Previous <em>/</em> next arguments</td>\n    </tr>\n    <tr>\n      <td><code>Alt E</code> <em>/</em> <code>Alt V</code></td>\n      <td>Open in external editor</td>\n    </tr>\n    <tr>\n      <td><code>^L</code></td>\n      <td>Repaint screen</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"help\">Help</h3>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>Alt H</code></td>\n      <td>Help on word (man)</td>\n    </tr>\n    <tr>\n      <td><code>Alt W</code></td>\n      <td>Help on word (short descriptions)</td>\n    </tr>\n    <tr>\n      <td><code>Alt L</code></td>\n      <td>List directory on cursor</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"function\">Function</h2>\n\n<h3 id=\"writing-functions\">Writing functions</h3>\n\n<pre><code class=\"language-fish\">function my_function --description \"My description\"\n  ···\nend\n</code></pre>\n\n<h3 id=\"conditional\">Conditional</h3>\n\n<pre><code class=\"language-fish\">if test -f foo.txt\n  ···\nelse if test -f bar.txt\n  ···\nelse\n  ···\nend\n</code></pre>\n\n<h3 id=\"combining-tests\">Combining tests</h3>\n\n<pre><code class=\"language-fish\">if test -f foo.txt &amp;&amp; test -f bar.txt\n</code></pre>\n\n<pre><code class=\"language-fish\">if test -f foo.txt -a -f bar.txt\n</code></pre>\n\n<pre><code class=\"language-fish\">if test \\( -f foo.txt \\) -a -f \\( bar.txt \\)\n</code></pre>\n\n<h3 id=\"events\">Events</h3>\n\n<h4 id=\"emitting\">Emitting</h4>\n\n<pre><code class=\"language-fish\">emit my_event\n</code></pre>\n\n<h4 id=\"listening\">Listening</h4>\n\n<pre><code class=\"language-fish\">function myhook --on-event my_event\n  ···\nend\n</code></pre>\n\n<p>This lets you hook onto events, such as <code>fish_prompt</code>.</p>\n\n<h2 id=\"completions\">Completions</h2>\n\n<h3 id=\"creating-completions\">Creating completions</h3>\n\n<h4 id=\"fishcompletionsmycommandfish\">~/.fish/completions/mycommand.fish</h4>\n\n<pre><code class=\"language-fish\">complete -c mycommand ...\ncomplete -c mycommand ...\ncomplete -c mycommand ...\n</code></pre>\n\n<h3 id=\"options\">Options</h3>\n\n<pre><code class=\"language-fish\">complete \\\n  -c                         # command\n  -s                         # short option\n  -l                         # long option\n  -r, --require-parameter\n  -f, --no-files\n  -x                         # exclusive (-r -f)\n  -n '__fish_use_subcommand' # condition\n  --description \"..\"\n</code></pre>\n\n<h4 id=\"example\">Example</h4>\n\n<pre><code class=\"language-fish\">  complete -c $cmd \\\n-n '__fish_use_subcommand' \\\n-x -a hello \\\n--description 'lol'\n</code></pre>\n\n<h3 id=\"conditions\">Conditions</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Condition</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-n __fish_complete_directories STRING DESCRIPTION</code></td>\n      <td>performs path completion on STRING, allowing only directories, and giving them the description DESCRIPTION.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_complete_path STRING DESCRIPTION</code></td>\n      <td>performs path completion on STRING, giving them the description DESCRIPTION.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_complete_groups</code></td>\n      <td>prints a list of all user groups with the groups members as description.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_complete_pids</code></td>\n      <td>prints a list of all processes IDs with the command name as description.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_complete_suffix SUFFIX</code></td>\n      <td>performs file completion allowing only files ending in SUFFIX. The mimetype database is used to find a suitable description.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_complete_users</code></td>\n      <td>prints a list of all users with their full name as description.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_print_filesystems</code></td>\n      <td>prints a list of all known file systems. Currently, this is a static list, and not dependent on what file systems the host operating system actually understands.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_print_hostnames</code></td>\n      <td>prints a list of all known hostnames. This functions searches the fstab for nfs servers, ssh for known hosts and checks the /etc/hosts file.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_print_interfaces</code></td>\n      <td>prints a list of all known network interfaces.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_print_packages</code></td>\n      <td>prints a list of all installed packages. This function currently handles Debian, rpm and Gentoo packages.</td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_use_subcommand</code></td>\n      <td> </td>\n    </tr>\n    <tr>\n      <td><code>-n __fish_seen_subcommand_from init</code></td>\n      <td> </td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"example-1\">Example</h4>\n\n<pre><code class=\"language-fish\">complete -c ruby -s X -x -a '(__fish_complete_directories (commandline -ct))' --description 'Directory'\n</code></pre>\n\n<h3 id=\"examples\">Examples</h3>\n\n<p>Start each example with <code>complete -c cmdname</code></p>\n\n<pre><code class=\"language-fish\">-x\n  # no filename completion\n</code></pre>\n\n<pre><code class=\"language-fish\">-s d -x -a \"read skip\"\n  # -d {read|skip}\n</code></pre>\n\n<pre><code class=\"language-fish\">-s d -x\n  # -d &lt;something&gt;\n</code></pre>\n\n<pre><code class=\"language-fish\">-s f -r\n  # -f FILE\n</code></pre>\n\n<pre><code class=\"language-fish\">-s f -l force\n  # -f, --force\n</code></pre>\n\n<pre><code class=\"language-fish\">-a \"(cat /etc/passwd | cut -d : -f 1)\"\n  # first argument as filename\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-01-31"
},{
  "id": "gh-pages",
  "title": "GitHub pages",
  "url": "/gh-pages",
  "category": "Jekyll",
  "keywords": null,
  "content_html": "<h2 id=\"custom-domains\">Custom domains</h2>\n\n<h3 id=\"custom-domains-1\">Custom domains</h3>\n\n<pre><code class=\"language-sh\">$ echo \"foobar.com\" &gt; CNAME\n$ git commit &amp;&amp; git push\n</code></pre>\n\n<p>Create a <code>CNAME</code> file with your domain on it.</p>\n\n<p>See: <a href=\"https://help.github.com/articles/quick-start-setting-up-a-custom-domain/\">Setting up a custom domain</a> <em>(github.com)</em></p>\n\n<h3 id=\"set-up-your-domain\">Set up your domain</h3>\n\n<p class=\"-setup\">Subdomain (like www):</p>\n\n<pre><code> CNAME =&gt; username.github.io\n</code></pre>\n\n<p class=\"-setup\">Apex domains:</p>\n\n<pre><code> ALIAS =&gt; username.github.io\n</code></pre>\n\n<p class=\"-setup\">Apex domains (alternative):</p>\n\n<pre><code>A =&gt; 192.30.252.153\nA =&gt; 192.30.252.154\n</code></pre>\n\n<h2 class=\"-one-column\" id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://pages.github.com\">https://pages.github.com</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "git-branch",
  "title": "Git branches",
  "url": "/git-branch",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"working-with-branches\">Working with branches</h2>\n\n<h3 id=\"creating\">Creating</h3>\n\n<pre><code class=\"language-bash\">git checkout -b $branchname\ngit push origin $branchname --set-upstream\n</code></pre>\n\n<p>Creates a new branch locally then pushes it.</p>\n\n<h3 id=\"getting-from-remote\">Getting from remote</h3>\n\n<pre><code class=\"language-bash\">git fetch origin\ngit checkout --track origin/$branchname\n</code></pre>\n\n<p>Gets a branch in a remote.</p>\n\n<h3 id=\"delete-local-remote-tracking-branches\">Delete local remote-tracking branches</h3>\n\n<pre><code class=\"language-bash\">git remote prune origin\n</code></pre>\n\n<p>Deletes <code>origin/*</code> branches in your local copy. Doesn’t affect the remote.</p>\n\n<h3 id=\"list-existing-branches\">List existing branches</h3>\n\n<pre><code class=\"language-bash\">git branch --list\n</code></pre>\n\n<p>Existing branches are listed. Current branch will be highlighted with an asterisk.</p>\n\n<h3 id=\"list-merged-branches\">List merged branches</h3>\n\n<pre><code class=\"language-bash\">git branch -a --merged\n</code></pre>\n\n<p>List outdated branches that have been merged into the current one.</p>\n\n<h3 id=\"delete-a-local-branch\">Delete a local branch</h3>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<p>Deletes the branch only if the changes have been pushed and merged with remote.</p>\n\n<h3 id=\"delete-branch-forcefully\">Delete branch forcefully</h3>\n\n<pre><code class=\"language-bash\">git branch -D $branchname\n</code></pre>\n\n<pre><code class=\"language-bash\">git branch -d $branchname\n</code></pre>\n\n<blockquote>\n  <p>Note: You can also use the -D flag which is synonymous with –delete –force instead of -d. This will delete the branch regardless of its merge status.\nDelete a branch irrespective of its merged status.</p>\n</blockquote>\n\n<h3 id=\"delete-remote-branch\">Delete remote branch</h3>\n\n<pre><code class=\"language-bash\">git push origin --delete :$branchname\n</code></pre>\n\n<p>Works for tags, too!</p>\n\n<h3 id=\"get-current-sha1\">Get current sha1</h3>\n\n<pre><code class=\"language-bash\">git show-ref HEAD -s\n</code></pre>\n<h3 id=\"reset-branch-and-remove-all-changes\">Reset branch and remove all changes</h3>\n\n<pre><code class=\"language-bash\">git reset --hard\n</code></pre>\n\n<h3 id=\"undo-commits-to-a-specific-commit\">Undo commits to a specific commit</h3>\n\n<pre><code class=\"language-bash\">git reset --hard $commit_id\n\n# Now push to your branch\ngit push --force\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-02-13"
},{
  "id": "git-extras",
  "title": "Git extras",
  "url": "/git-extras",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"references\">References</h2>\n\n<h3 id=\"git-flow\">Git-flow</h3>\n\n<pre><code class=\"language-sh\">$ git feature myfeature\n  switched to branch 'feature/rofl'\n\n$ ...\n$ git checkout develop\n$ git feature finish myfeature\n  merging 'feature/rofl' into develop\n  deleted branch 'feature/rofl'\n</code></pre>\n\n<p>Also <code>git-bug</code> and <code>git-refactor</code>.</p>\n\n<h3 id=\"branches\">Branches</h3>\n\n<pre><code class=\"language-sh\">$ git delete-merged-branches\n  # hint: do `git remote prune origin` after\n\n$ git create-branch development\n$ git delete-branch development\n\n$ git fresh-branch gh-pages\n</code></pre>\n\n<h3 id=\"inspecting\">Inspecting</h3>\n\n<pre><code class=\"language-sh\">$ git summary   # repo age, commits, active days, etc\n$ git impact    # impact graph\n$ git effort    # commits per file\n</code></pre>\n\n<h3 id=\"github\">Github</h3>\n\n<pre><code class=\"language-sh\">$ git fork strongloop/express\n# sync your fork with the original repository:\n$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\n$ git fetch upstream; git merge upstream/master\n</code></pre>\n\n<h3 id=\"tags\">Tags</h3>\n\n<pre><code class=\"language-sh\">$ git release v1.0.0           # commit, tag, push-tags\n$ git delete-tag v1.0.0\n</code></pre>\n\n<h3 id=\"conveniences\">Conveniences</h3>\n\n<pre><code class=\"language-sh\">$ git ignore \"*.log\"\n</code></pre>\n\n<h3 id=\"locking\">Locking</h3>\n\n<p>Assumes that changes will not be committed.</p>\n\n<pre><code class=\"language-sh\">$ git lock config/database.yml\n$ git unlock config/database.yml\n</code></pre>\n\n<h3 id=\"etc\">Etc</h3>\n\n<pre><code class=\"language-sh\">$ git obliterate secret.yml   # remove all references to it\n</code></pre>\n\n<h3 id=\"references-1\">References</h3>\n\n<ul>\n  <li>https://github.com/visionmedia/git-extras</li>\n</ul>",
  "intro_html": "<p>Quick reference to some utilities in the <a href=\"https://github.com/tj/git-extras\">git-extras</a> utilities.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "git-log-format",
  "title": "Git log format string",
  "url": "/git-log-format",
  "category": "Git",
  "keywords": ["git log --pretty=format:%H","%H - Commit hash","%an - Author","%aD - Author date"],
  "content_html": "<h2 class=\"-three-column\" id=\"log-format\">Log format</h2>\n\n<h3 class=\"-prime\" id=\"pretty-format\">Pretty format</h3>\n\n<pre><code class=\"language-bash\">git log --pretty=\"format:%H\"\n</code></pre>\n\n<p>See the next tables on format variables.</p>\n\n<h3 id=\"hash\">Hash</h3>\n\n<h4 id=\"commit\">Commit</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%H</code></td>\n      <td>commit hash</td>\n    </tr>\n    <tr>\n      <td><code>%h</code></td>\n      <td>(abbrev) commit hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"tree\">Tree</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%T</code></td>\n      <td>tree hash</td>\n    </tr>\n    <tr>\n      <td><code>%t</code></td>\n      <td>(abbrev) tree hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"parent\">Parent</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%P</code></td>\n      <td>parent hash</td>\n    </tr>\n    <tr>\n      <td><code>%p</code></td>\n      <td>(abbrev) parent hash</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"commit-1\">Commit</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%s</code></td>\n      <td>commit subject</td>\n    </tr>\n    <tr>\n      <td><code>%f</code></td>\n      <td>commit subject, filename style</td>\n    </tr>\n    <tr>\n      <td><code>%b</code></td>\n      <td>commit body</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>%d</code></td>\n      <td>ref names</td>\n    </tr>\n    <tr>\n      <td><code>%e</code></td>\n      <td>encoding</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"author-and-committer\">Author and committer</h2>\n\n<h3 id=\"author\">Author</h3>\n\n<h4 id=\"name\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%an</code></td>\n      <td>author</td>\n    </tr>\n    <tr>\n      <td><code>%aN</code></td>\n      <td>author, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ae</code></td>\n      <td>author email</td>\n    </tr>\n    <tr>\n      <td><code>%aE</code></td>\n      <td>author email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%aD</code></td>\n      <td>author date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%ar</code></td>\n      <td>author date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%at</code></td>\n      <td>author date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ai</code></td>\n      <td>author date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"committer\">Committer</h3>\n\n<h4 id=\"name-1\">Name</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cn</code></td>\n      <td>committer name</td>\n    </tr>\n    <tr>\n      <td><code>%cN</code></td>\n      <td>committer name, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"email-1\">Email</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%ce</code></td>\n      <td>committer email</td>\n    </tr>\n    <tr>\n      <td><code>%cE</code></td>\n      <td>committer email, respecting mailmap</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"date-1\">Date</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%cD</code></td>\n      <td>committer date (rfc2882)</td>\n    </tr>\n    <tr>\n      <td><code>%cr</code></td>\n      <td>committer date (relative)</td>\n    </tr>\n    <tr>\n      <td><code>%ct</code></td>\n      <td>committer date (unix timestamp)</td>\n    </tr>\n    <tr>\n      <td><code>%ci</code></td>\n      <td>committer date (iso8601)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log\">Git log cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-18"
},{
  "id": "git-log",
  "title": "git log",
  "url": "/git-log",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"revision-ranges\">Revision ranges</h3>\n\n<pre><code class=\"language-bash\">git log master             # branch\ngit log origin/master      # branch, remote\ngit log v1.0.0             # tag\n\ngit log master develop\n\ngit log v2.0..master       # reachable from *master* but not *v2.0*\ngit log v2.0...master      # reachable from *master* and *v2.0*, but not both\n</code></pre>\n\n<p>See <a href=\"./git-revisions\">gitrevisions</a>.</p>\n\n<h3 id=\"basic-filters\">Basic filters</h3>\n\n<pre><code class=\"language-bash\">-n, --max-count=2\n    --skip=2\n</code></pre>\n\n<pre><code class=\"language-bash\">    --since=\"1 week ago\"\n    --until=\"yesterday\"\n</code></pre>\n\n<pre><code class=\"language-bash\">    --author=\"Rico\"\n    --committer=\"Rico\"\n</code></pre>\n\n<h3 id=\"search\">Search</h3>\n\n<pre><code class=\"language-bash\">    --grep=\"Merge pull request\"   # in commit messages\n    -S\"console.log\"               # in code\n    -G\"foo.*\"                     # in code (regex)\n</code></pre>\n\n<pre><code class=\"language-bash\">    --invert-grep\n    --all-match                   # AND in multi --grep\n</code></pre>\n\n<h3 id=\"limiting\">Limiting</h3>\n\n<pre><code class=\"language-bash\">    --merges\n    --no-merges\n</code></pre>\n\n<pre><code class=\"language-bash\">    --first-parent          # no stuff from merged branches\n</code></pre>\n\n<pre><code class=\"language-bash\">    --branches=\"feature/*\"\n    --tags=\"v*\"\n    --remotes=\"origin\"\n</code></pre>\n\n<h3 id=\"simplification\">Simplification</h3>\n\n<pre><code class=\"language-bash\">git log -- app/file.rb          # only file\n    --simplify-by-decoration    # tags and branches\n</code></pre>\n\n<h3 id=\"ordering\">Ordering</h3>\n\n<pre><code class=\"language-bash\">    --date-order\n    --author-date-order\n    --topo-order              # \"smart\" ordering\n    --reverse\n</code></pre>\n\n<h3 id=\"formatting\">Formatting</h3>\n\n<pre><code class=\"language-bash\">    --abbrev-commit\n    --oneline\n    --graph\n</code></pre>\n\n<h3 id=\"custom-formats\">Custom formats</h3>\n\n<pre><code class=\"language-bash\">    --pretty=\"format:%H\"\n</code></pre>\n\n<p>See: <a href=\"./git-log-format\">Git log format cheatsheet</a></p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"./git-log-format\">Git log format cheatsheet</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "git-revisions",
  "title": "Git revisions",
  "url": "/git-revisions",
  "category": "Git",
  "keywords": null,
  "content_html": "<h3 id=\"example-usages\">Example usages</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...develop</code></td>\n      <td>inspect differences in branches</td>\n    </tr>\n    <tr>\n      <td><em><code>git rebase -i</code></em> <code>HEAD~3</code></td>\n      <td>rebase last 3 commits</td>\n    </tr>\n    <tr>\n      <td><em><code>git reset --hard</code></em> <code>HEAD@{2}</code></td>\n      <td>undo last operation that changed HEAD</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v2^{}</code></td>\n      <td>checkout the <code>v2</code> tag (not <code>v2</code> branch)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>The 3rd argument in each of these commands is a <code>gitrevision</code>. These gitrevisions can be passed to many Git commands.</p>\n\n<h3 id=\"common-git-revisions\">Common git revisions</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Reference</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master</code></td>\n      <td>local branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>origin/master</code></td>\n      <td>remote branch</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master~2</code></td>\n      <td>2 commits back from master</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git show</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git show</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>These are just the common ones, there’s a lot more below! (These work in many other commands, not just <code>git show</code>.)</p>\n\n<h2 id=\"reference\">Reference</h2>\n\n<h3 id=\"commits\">Commits</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>dae68e1</code></td>\n      <td>sha1</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"references\">References</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>HEAD</code></td>\n      <td>reference</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master</code></td>\n      <td>branch</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v1.0.0</code></td>\n      <td>tag</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>origin/master</code></td>\n      <td>aka, <em>refs/remotes/origin/master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>heads/master</code></td>\n      <td>aka, <em>refs/heads/master</em></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"searching-back\">Searching back</h3>\n\n<table class=\"-mute-em\">\n  <thead>\n    <tr>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{yesterday}</code></td>\n      <td>also <em>1 day ago</em>, etc</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{2}</code></td>\n      <td>2nd prior value</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master@{push}</code></td>\n      <td>where <em>master</em> would push to</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^</code></td>\n      <td>parent commit</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^2</code></td>\n      <td>2nd parent, eg, what it merged</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master~5</code></td>\n      <td>5 parents back</td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>master^0</code></td>\n      <td>this commit; disambiguates from tags</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{tag}</code></td>\n      <td>can be <em>commit</em>, <em>tag</em>, <em>tree</em>, <em>object</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>v0.99.8^{}</code></td>\n      <td>defaults to <em>{tag}</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><em><code>git checkout</code></em> <code>\":/fix bug\"</code></td>\n      <td>searches commit messages</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"other\">Other</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>HEAD:README</code></td>\n      <td>…</td>\n    </tr>\n    <tr>\n      <td><code>0:README</code></td>\n      <td>(0 to 3) …</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"ranges\">Ranges</h2>\n\n<h3 id=\"ranges-1\">Ranges</h3>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master</code></td>\n      <td>reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>^master</code></td>\n      <td>exclude reachable parents from master</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>reachable from <em>fix</em> but not <em>master</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>reachable from <em>fix</em> and <em>master</em>, but not both</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^@</code></td>\n      <td>parents of <em>HEAD</em></td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^!</code></td>\n      <td><em>HEAD</em>, then excluding parents’s ancestors</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>HEAD^{:/fix}</code></td>\n      <td>search previous <em>HEAD</em>s matching criteria</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"ranges-illustration\">Ranges illustration</h3>\n\n<pre class=\"-box-chars -setup\"><code class=\"language-nohighlight\">A ─┬─ E ── F ── G   master\n   │\n   └─ B ── C ── D   fix\n</code></pre>\n\n<table class=\"-mute-em\">\n  <tbody>\n    <tr>\n      <td><em><code>git log</code></em> <code>master..fix</code></td>\n      <td>BCD</td>\n    </tr>\n    <tr>\n      <td><em><code>git log</code></em> <code>master...fix</code></td>\n      <td>BCD and EFG</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"references-1\">References</h2>\n\n<ul>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">Git Tools - Revision Selection</a> <em>(git-scm.com)</em></li>\n  <li><a href=\"https://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html\">gitrevisions(7)</a> <em>(kernel.org)</em></li>\n</ul>",
  "intro_html": "<p>A list of revision specifications you can use with <code>git log</code> and many other Git commands. Summarized from <code>gitrevisions(7)</code> man page.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2017-10-11"
},{
  "id": "git-tricks",
  "title": "Git tricks",
  "url": "/git-tricks",
  "category": "Git",
  "keywords": null,
  "content_html": "<h2 id=\"refs\">Refs</h2>\n\n<pre><code>HEAD^       # 1 commit before head\nHEAD^^      # 2 commits before head\nHEAD~5      # 5 commits before head\n</code></pre>\n\n<h2 id=\"branches\">Branches</h2>\n\n<pre><code># create a new branch\n  git checkout -b $branchname\n  git push origin $branchname --set-upstream\n\n# get a remote branch\n  git fetch origin\n  git checkout --track origin/$branchname\n\n# delete local remote-tracking branches (lol)\n  git remote prune origin\n\n# list merged branches\n  git branch -a --merged\n\n# delete remote branch\n  git push origin :$branchname\n  \n# go back to previous branch\n  git checkout -\n</code></pre>\n\n<h2 id=\"collaboration\">Collaboration</h2>\n\n<pre><code># Rebase your changes on top of the remote master\n  git pull --rebase upstream master\n  \n# Squash multiple commits into one for a cleaner git log\n# (on the following screen change the word pick to either 'f' or 's')\n  git rebase -i $commit_ref\n</code></pre>\n\n<h2 id=\"submodules\">Submodules</h2>\n\n<pre><code># Import .gitmodules\n  git submodule init\n\n# Clone missing submodules, and checkout commits\n  git submodule update --init --recursive\n\n# Update remote URLs in .gitmodules\n# (Use when you changed remotes in submodules)\n  git submodule sync\n</code></pre>\n\n<h2 id=\"diff\">Diff</h2>\n\n<h3 id=\"diff-with-stats\">Diff with stats</h3>\n\n<pre><code>git diff --stat\napp/a.txt    | 2 +-\napp/b.txt    | 8 ++----\n2 files changed, 10 insertions(+), 84 deletions(-)\n</code></pre>\n\n<h3 id=\"just-filenames\">Just filenames</h3>\n\n<pre><code>git diff --summary\n</code></pre>\n\n<h2 id=\"log-options\">Log options</h2>\n\n<pre><code>--oneline\n  e11e9f9 Commit message here\n\n--decorate\n  shows \"(origin/master)\"\n\n--graph\n  shows graph lines\n\n--date=relative\n  \"2 hours ago\"\n</code></pre>\n\n<h2 id=\"misc\">Misc</h2>\n\n<h3 id=\"cherry-pick\">Cherry pick</h3>\n\n<pre><code>git rebase 76acada^\n</code></pre>\n\n<h3 id=\"misc-1\">Misc</h3>\n\n<pre><code># get current sha1 (?)\n  git show-ref HEAD -s\n\n# show single commit info\n  git log -1 f5a960b5\n\n# Go back up to root directory\n  cd \"$(git rev-parse --show-top-level)\"\n</code></pre>\n\n<h2 id=\"short-log\">Short log</h2>\n\n<pre><code> $ git shortlog\n $ git shortlog HEAD~20..    # last 20 commits\n\n James Dean (1):\n     Commit here\n     Commit there\n\n Frank Sinatra (5):\n     Another commit\n     This other commit\n</code></pre>\n\n<h2 id=\"bisect\">Bisect</h2>\n\n<pre><code>git bisect start HEAD HEAD~6\ngit bisect run npm test\ngit checkout refs/bisect/bad   # this is where it screwed up\ngit bisect reset\n</code></pre>\n\n<h3 id=\"manual-bisection\">Manual bisection</h3>\n\n<pre><code>git bisect start\ngit bisect good   # current version is good\n\ngit checkout HEAD~8\nnpm test          # see if it's good\ngit bisect bad    # current version is bad\n\ngit bisect reset  # abort\n</code></pre>\n\n<h2 id=\"searching\">Searching</h2>\n\n<pre><code>git log --grep=\"fixes things\"  # search in commit messages\ngit log -S\"window.alert\"       # search in code\ngit log -G\"foo.*\"              # search in code (regex)\n</code></pre>\n\n<h2 id=\"gpg-signing\">GPG Signing</h2>\n\n<pre><code>git config set user.signingkey &lt;GPG KEY ID&gt;       # Sets GPG key to use for signing\n\ngit commit -m \"Implement feature Y\" --gpg-sign    # Or -S, GPG signs commit\n\ngit config set commit.gpgsign true                # Sign commits by default\ngit commit -m \"Implement feature Y\" --no-gpg-sign # Do not sign\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "go",
  "title": "Go",
  "url": "/go",
  "category": "C-like",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-intro\" id=\"introduction\">Introduction</h3>\n\n<ul>\n  <li><a href=\"https://tour.golang.org/welcome/1\">A tour of Go</a> <em>(tour.golang.org)</em></li>\n  <li><a href=\"https://repl.it/languages/go\">Go repl</a> <em>(repl.it)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/\">Golang wiki</a> <em>(github.com)</em></li>\n</ul>\n\n<h3 class=\"-prime\" id=\"hello-world\">Hello world</h3>\n\n<h4 class=\"-file\" id=\"hellogo\">hello.go</h4>\n\n<pre><code class=\"language-go\">package main\n\nimport \"fmt\"\n\nfunc main() {\n  message := greetMe(\"world\")\n  fmt.Println(message)\n}\n\nfunc greetMe(name string) string {\n  return \"Hello, \" + name + \"!\"\n}\n</code></pre>\n\n<pre><code class=\"language-bash\">$ go build\n</code></pre>\n\n<p>Or try it out in the <a href=\"https://repl.it/languages/go\">Go repl</a>, or <a href=\"https://tour.golang.org/welcome/1\">A Tour of Go</a>.</p>\n\n<h3 id=\"variables\">Variables</h3>\n\n<h4 id=\"variable-declaration\">Variable declaration</h4>\n\n<pre><code class=\"language-go\">var msg string\nmsg = \"Hello\"\n</code></pre>\n\n<h4 id=\"shortcut-of-above-infers-type\">Shortcut of above (Infers type)</h4>\n\n<pre><code class=\"language-go\">msg := \"Hello\"\n</code></pre>\n\n<h3 id=\"constants\">Constants</h3>\n\n<pre><code class=\"language-go\">const Phi = 1.618\n</code></pre>\n\n<p>Constants can be character, string, boolean, or numeric values.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/15\">Constants</a></p>\n\n<h2 class=\"-three-column\" id=\"basic-types\">Basic types</h2>\n\n<h3 id=\"strings\">Strings</h3>\n\n<pre><code class=\"language-go\">str := \"Hello\"\n</code></pre>\n\n<pre><code class=\"language-go\">str := `Multiline\nstring`\n</code></pre>\n\n<p>Strings are of type <code>string</code>.</p>\n\n<h3 id=\"numbers\">Numbers</h3>\n\n<h4 id=\"typical-types\">Typical types</h4>\n\n<pre><code class=\"language-go\">num := 3          // int\nnum := 3.         // float64\nnum := 3 + 4i     // complex128\nnum := byte('a')  // byte (alias for uint8)\n</code></pre>\n\n<h4 id=\"other-types\">Other types</h4>\n\n<pre><code class=\"language-go\">var u uint = 7        // uint (unsigned)\nvar p float32 = 22.7  // 32-bit float\n</code></pre>\n\n<h3 id=\"arrays\">Arrays</h3>\n\n<pre><code class=\"language-go\">// var numbers [5]int\nnumbers := [...]int{0, 0, 0, 0, 0}\n</code></pre>\n\n<p>Arrays have a fixed size.</p>\n\n<h3 id=\"slices\">Slices</h3>\n\n<pre><code class=\"language-go\">slice := []int{2, 3, 4}\n</code></pre>\n\n<pre><code class=\"language-go\">slice := []byte(\"Hello\")\n</code></pre>\n\n<p>Slices have a dynamic size, unlike arrays.</p>\n\n<h3 id=\"pointers\">Pointers</h3>\n\n<pre data-line=\"2\"><code class=\"language-go\">func main () {\n  b := *getPointer()\n  fmt.Println(\"Value is\", b)\n}\n</code></pre>\n\n<pre data-line=\"3\"><code class=\"language-go\">func getPointer () (myPointer *int) {\n  a := 234\n  return &amp;a\n}\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">a := new(int)\n*a = 234\n</code></pre>\n\n<p>Pointers point to a memory location of a variable. Go is fully garbage-collected.</p>\n\n<p>See: <a href=\"https://tour.golang.org/moretypes/1\">Pointers</a></p>\n\n<h3 id=\"type-conversions\">Type conversions</h3>\n\n<pre><code class=\"language-go\">i := 2\nf := float64(i)\nu := uint(i)\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/basics/13\">Type conversions</a></p>\n\n<h2 class=\"-three-column\" id=\"flow-control\">Flow control</h2>\n\n<h3 id=\"conditional\">Conditional</h3>\n\n<pre data-line=\"1,3,5\"><code class=\"language-go\">if day == \"sunday\" || day == \"saturday\" {\n  rest()\n} else if day == \"monday\" &amp;&amp; isTired() {\n  groan()\n} else {\n  work()\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/5\">If</a></p>\n\n<h3 id=\"statements-in-if\">Statements in if</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">if _, err := getResult(); err != nil {\n  fmt.Println(\"Uh oh\")\n}\n</code></pre>\n\n<p>A condition in an <code>if</code> statement can be preceded with a statement before a <code>;</code>.</p>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/6\">If with a short statement</a></p>\n\n<h3 id=\"switch\">Switch</h3>\n\n<pre><code class=\"language-go\">switch day {\n  case \"sunday\":\n    // cases don't \"fall through\" by default!\n    fallthrough\n\n  case \"saturday\":\n    rest()\n\n  default:\n    work()\n}\n</code></pre>\n\n<p>See: <a href=\"https://github.com/golang/go/wiki/Switch\">Switch</a></p>\n\n<h3 id=\"for-loop\">For loop</h3>\n\n<pre><code class=\"language-go\">for count := 0; count &lt;= 10; count++ {\n  fmt.Println(\"My counter is at\", count)\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/flowcontrol/1\">For loops</a></p>\n\n<h3 id=\"for-range-loop\">For-Range loop</h3>\n\n<pre><code class=\"language-go\">entry := []string{\"Jack\",\"John\",\"Jones\"}\nfor i, val := range entry {\n  fmt.Printf(\"At position %d, the character %s is present\\n\", i, val)\n}\n</code></pre>\n\n<p>See: <a href=\"https://gobyexample.com/range\">For-Range loops</a></p>\n\n<h2 class=\"-three-column\" id=\"functions\">Functions</h2>\n\n<h3 id=\"lambdas\">Lambdas</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">myfunc := func() bool {\n  return x &gt; 10000\n}\n</code></pre>\n\n<p>Functions are first class objects.</p>\n\n<h3 id=\"multiple-return-types\">Multiple return types</h3>\n\n<pre><code class=\"language-go\">a, b := getMessage()\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">func getMessage() (a string, b string) {\n  return \"Hello\", \"World\"\n}\n</code></pre>\n\n<h3 id=\"named-return-values\">Named return values</h3>\n\n<pre data-line=\"4\"><code class=\"language-go\">func split(sum int) (x, y int) {\n  x = sum * 4 / 9\n  y = sum - x\n  return\n}\n</code></pre>\n\n<p>By defining the return value names in the signature, a <code>return</code> (no args) will return variables with those names.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/7\">Named return values</a></p>\n\n<h2 class=\"-three-column\" id=\"packages\">Packages</h2>\n\n<h3 id=\"importing\">Importing</h3>\n\n<pre><code class=\"language-go\">import \"fmt\"\nimport \"math/rand\"\n</code></pre>\n\n<pre><code class=\"language-go\">import (\n  \"fmt\"        // gives fmt.Println\n  \"math/rand\"  // gives rand.Intn\n)\n</code></pre>\n\n<p>Both are the same.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/1\">Importing</a></p>\n\n<h3 id=\"aliases\">Aliases</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">import r \"math/rand\"\n</code></pre>\n\n<pre><code class=\"language-go\">r.Intn()\n</code></pre>\n\n<h3 id=\"exporting-names\">Exporting names</h3>\n\n<pre><code class=\"language-go\">func Hello () {\n  ···\n}\n</code></pre>\n\n<p>Exported names begin with capital letters.</p>\n\n<p>See: <a href=\"https://tour.golang.org/basics/3\">Exported names</a></p>\n\n<h3 id=\"packages-1\">Packages</h3>\n\n<pre><code class=\"language-go\">package hello\n</code></pre>\n\n<p>Every package file has to start with <code>package</code>.</p>\n\n<h2 class=\"-three-column\" id=\"concurrency\">Concurrency</h2>\n\n<h3 id=\"goroutines\">Goroutines</h3>\n\n<pre data-line=\"3,6,7,8,13\"><code class=\"language-go\">func main() {\n  // A \"channel\"\n  ch := make(chan string)\n\n  // Start concurrent routines\n  go push(\"Moe\", ch)\n  go push(\"Larry\", ch)\n  go push(\"Curly\", ch)\n\n  // Read 3 results\n  // (Since our goroutines are concurrent,\n  // the order isn't guaranteed!)\n  fmt.Println(&lt;-ch, &lt;-ch, &lt;-ch)\n}\n</code></pre>\n\n<pre data-line=\"3\"><code class=\"language-go\">func push(name string, ch chan string) {\n  msg := \"Hey, \" + name\n  ch &lt;- msg\n}\n</code></pre>\n\n<p>Channels are concurrency-safe communication objects, used in goroutines.</p>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/1\">Goroutines</a>, <a href=\"https://tour.golang.org/concurrency/2\">Channels</a></p>\n\n<h3 id=\"buffered-channels\">Buffered channels</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">ch := make(chan int, 2)\nch &lt;- 1\nch &lt;- 2\nch &lt;- 3\n// fatal error:\n// all goroutines are asleep - deadlock!\n</code></pre>\n\n<p>Buffered channels limit the amount of messages it can keep.</p>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/3\">Buffered channels</a></p>\n\n<h3 id=\"closing-channels\">Closing channels</h3>\n\n<h4 id=\"closes-a-channel\">Closes a channel</h4>\n\n<pre data-line=\"4\"><code class=\"language-go\">ch &lt;- 1\nch &lt;- 2\nch &lt;- 3\nclose(ch)\n</code></pre>\n\n<h4 id=\"iterates-across-a-channel-until-its-closed\">Iterates across a channel until its closed</h4>\n\n<pre data-line=\"1\"><code class=\"language-go\">for i := range ch {\n  ···\n}\n</code></pre>\n\n<h4 id=\"closed-if-ok--false\">Closed if <code>ok == false</code></h4>\n\n<pre><code class=\"language-go\">v, ok := &lt;- ch\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/concurrency/4\">Range and close</a></p>\n\n<h3 id=\"waitgroup\">WaitGroup</h3>\n\n<pre data-line=\"1,4,8,12\"><code class=\"language-go\">import \"sync\"\n\nfunc main() {\n  var wg sync.WaitGroup\n  \n  for _, item := range itemList {\n    // Increment WaitGroup Counter\n    wg.Add(1)\n    go doOperation(item)\n  }\n  // Wait for goroutines to finish\n  wg.Wait()\n  \n}\n</code></pre>\n\n<pre data-line=\"2\"><code class=\"language-go\">func doOperation(item string) {\n  defer wg.Done()\n  // do operation on item\n  // ...\n}\n</code></pre>\n\n<p>A WaitGroup waits for a collection of goroutines to finish. The main goroutine calls Add to set the number of goroutines to wait for. The goroutine calls <code>wg.Done()</code> when it finishes.\nSee: <a href=\"https://golang.org/pkg/sync/#WaitGroup\">WaitGroup</a></p>\n\n<h2 id=\"error-control\">Error control</h2>\n\n<h3 id=\"defer\">Defer</h3>\n\n<pre data-line=\"2\"><code class=\"language-go\">func main() {\n  defer fmt.Println(\"Done\")\n  fmt.Println(\"Working...\")\n}\n</code></pre>\n\n<p>Defers running a function until the surrounding function returns.\nThe arguments are evaluated immediately, but the function call is not ran until later.</p>\n\n<p>See: <a href=\"https://blog.golang.org/defer-panic-and-recover\">Defer, panic and recover</a></p>\n\n<h3 id=\"deferring-functions\">Deferring functions</h3>\n\n<pre data-line=\"2,3,4\"><code class=\"language-go\">func main() {\n  defer func() {\n    fmt.Println(\"Done\")\n  }()\n  fmt.Println(\"Working...\")\n}\n</code></pre>\n\n<p>Lambdas are better suited for defer blocks.</p>\n\n<pre data-line=\"3,4,5\"><code class=\"language-go\">func main() {\n  var d = int64(0)\n  defer func(d *int64) {\n    fmt.Printf(\"&amp; %v Unix Sec\\n\", *d)\n  }(&amp;d)\n  fmt.Print(\"Done \")\n  d = time.Now().Unix()\n}\n</code></pre>\n<p>The defer func uses current value of d, unless we use a pointer to get final value at end of main.</p>\n\n<h2 class=\"-three-column\" id=\"structs\">Structs</h2>\n\n<h3 id=\"defining\">Defining</h3>\n\n<pre data-line=\"1,2,3,4\"><code class=\"language-go\">type Vertex struct {\n  X int\n  Y int\n}\n</code></pre>\n\n<pre><code class=\"language-go\">func main() {\n  v := Vertex{1, 2}\n  v.X = 4\n  fmt.Println(v.X, v.Y)\n}\n</code></pre>\n\n<p>See: <a href=\"https://tour.golang.org/moretypes/2\">Structs</a></p>\n\n<h3 id=\"literals\">Literals</h3>\n\n<pre><code class=\"language-go\">v := Vertex{X: 1, Y: 2}\n</code></pre>\n\n<pre><code class=\"language-go\">// Field names can be omitted\nv := Vertex{1, 2}\n</code></pre>\n\n<pre><code class=\"language-go\">// Y is implicit\nv := Vertex{X: 1}\n</code></pre>\n\n<p>You can also put field names.</p>\n\n<h3 id=\"pointers-to-structs\">Pointers to structs</h3>\n\n<pre><code class=\"language-go\">v := &amp;Vertex{1, 2}\nv.X = 2\n</code></pre>\n\n<p>Doing <code>v.X</code> is the same as doing <code>(*v).X</code>, when <code>v</code> is a pointer.</p>\n\n<h2 id=\"methods\">Methods</h2>\n\n<h3 id=\"receivers\">Receivers</h3>\n\n<pre><code class=\"language-go\">type Vertex struct {\n  X, Y float64\n}\n</code></pre>\n\n<pre data-line=\"1\"><code class=\"language-go\">func (v Vertex) Abs() float64 {\n  return math.Sqrt(v.X * v.X + v.Y * v.Y)\n}\n</code></pre>\n\n<pre><code class=\"language-go\">v := Vertex{1, 2}\nv.Abs()\n</code></pre>\n\n<p>There are no classes, but you can define functions with <em>receivers</em>.</p>\n\n<p>See: <a href=\"https://tour.golang.org/methods/1\">Methods</a></p>\n\n<h3 id=\"mutation\">Mutation</h3>\n\n<pre data-line=\"1\"><code class=\"language-go\">func (v *Vertex) Scale(f float64) {\n  v.X = v.X * f\n  v.Y = v.Y * f\n}\n</code></pre>\n\n<pre><code class=\"language-go\">v := Vertex{6, 12}\nv.Scale(0.5)\n// `v` is updated\n</code></pre>\n\n<p>By defining your receiver as a pointer (<code>*Vertex</code>), you can do mutations.</p>\n\n<p>See: <a href=\"https://tour.golang.org/methods/4\">Pointer receivers</a></p>\n\n<h2 id=\"references\">References</h2>\n\n<h3 class=\"-intro\" id=\"official-resources\">Official resources</h3>\n\n<ul>\n  <li><a href=\"https://tour.golang.org/welcome/1\">A tour of Go</a> <em>(tour.golang.org)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/\">Golang wiki</a> <em>(github.com)</em></li>\n  <li><a href=\"https://golang.org/doc/effective_go.html\">Effective Go</a> <em>(golang.org)</em></li>\n</ul>\n\n<h3 class=\"-intro\" id=\"other-links\">Other links</h3>\n\n<ul>\n  <li><a href=\"https://gobyexample.com/\">Go by Example</a> <em>(gobyexample.com)</em></li>\n  <li><a href=\"https://awesome-go.com/\">Awesome Go</a> <em>(awesome-go.com)</em></li>\n  <li><a href=\"https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw\">JustForFunc Youtube</a> <em>(youtube.com)</em></li>\n  <li><a href=\"https://github.com/golang/go/wiki/CodeReviewComments\">Style Guide</a> <em>(github.com)</em></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-06-21"
},{
  "id": "less",
  "title": "Less.js",
  "url": "/less",
  "category": "Others",
  "keywords": null,
  "content_html": "<h3 id=\"functions\">Functions</h3>\n\n<pre><code>unit(30px / 5px)  #=&gt; 6\nunit(5, px)       #=&gt; 5px\n\ne(\"ms:stuff()\")   #=&gt; ms:stuff() (unquote)\n\n%(\"count: %d\", 1+2) #=&gt; \"count: 3\"\n\niscolor(@x)\nisstring(@x)\nisnumber(@x)\niskeyword(@x)\nisurl(url(...))\nispixel()\nisem()\nispercentage()\nisunit()\n\nhue(@color)\nsaturation(@color)\nlightness(@color)\nluma(@color)\nluminance(@color)\n\nfade(@color, amount)\nfadein(@color, amount)\nfadeout(@color, amount)\nspin(@color, degrees)\nmix(@a, @b, amount)\n</code></pre>\n\n<h3 id=\"conditionals\">Conditionals</h3>\n\n<pre><code>.image when (luma(@color) &gt; 50%) { }\n.image when (not(...)) { }\n.image when (default()) {}\n.image when (e(@shape) = 'circle') { }\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "licenses",
  "title": "Licenses",
  "url": "/licenses",
  "category": "Others",
  "keywords": null,
  "content_html": "<h2 id=\"licenses\">Licenses</h2>\n\n<h3 id=\"mit-license\">MIT License</h3>\n\n<pre><code>The MIT License (MIT)\n\nCopyright (c) 2015 $NAME\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>\n\n<h3 id=\"isc\">ISC</h3>\n\n<pre><code>Copyright (c) 2015, $NAME\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n</code></pre>\n\n<h3 id=\"bsd-2c\">BSD 2C</h3>\n\n<pre><code>Copyright (c) 2015, $NAME\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n</code></pre>\n\n<h3 id=\"bsd-3c\">BSD 3C</h3>\n\n<pre><code>Copyright (c) 2015, $NAME\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of simpler-extend nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2017-08-30"
},{
  "id": "linux",
  "title": "Linux",
  "url": "/linux",
  "category": "Others",
  "keywords": null,
  "content_html": "<h3 id=\"mounting-a-ram-drive\">Mounting a RAM drive</h3>\n\n<pre><code>$ mount -t tmpfs -o size=5G,nr_inodes=5k,mode=700 tmpfs /tmp\n</code></pre>\n\n<h3 id=\"visudo\">Visudo</h3>\n\n<pre><code>sudo visudo\n\nusername ALL=(ALL) NOPASSWD:/sbin/restart whatever\n</code></pre>\n\n<h3 id=\"display-the-amount-of-available-disk-space\">Display the amount of available disk space</h3>\n\n<pre><code class=\"language-sh\">df\ndf -h   # human-readable format\ndf -a   # all filesystems\n</code></pre>\n\n<h3 id=\"display-disk-usage\">Display disk usage</h3>\n\n<pre><code class=\"language-sh\">du\ndu -hsx * | sort -rh | head -10    # largest 10 folders\n</code></pre>\n\n<h3 id=\"answer-yes-in-a-bash-script\">Answer yes in a bash script</h3>\n\n<pre><code class=\"language-bash\">yes | /your/command\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "makefile",
  "title": "Makefile",
  "url": "/makefile",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h2 id=\"var-assignment\">Var assignment</h2>\n\n<pre><code class=\"language-makefile\">uglify = $(uglify)        # lazy assignment\ncompressor := $(uglify)   # immediate assignment\nprefix ?= /usr/local      # safe assignment\nhello += world            # append\n</code></pre>\n\n<p><code>=</code> expressions are only evaluated when they’re being used.</p>\n\n<h2 id=\"magic-variables\">Magic variables</h2>\n\n<pre><code class=\"language-makefile\">out.o: src.c src.h\n  $@   # \"out.o\" (target)\n  $&lt;   # \"src.c\" (first prerequisite)\n  $^   # \"src.c src.h\" (all prerequisites)\n\n%.o: %.c\n  $*   # the 'stem' with which an implicit rule matches (\"foo\" in \"foo.c\")\n\nalso:\n  $+   # prerequisites (all, with duplication)\n  $?   # prerequisites (new ones)\n  $|   # prerequisites (order-only?)\n\n  $(@D) # target directory\n</code></pre>\n\n<h2 id=\"command-prefixes\">Command prefixes</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th>Prefix</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>-</code></td>\n      <td>Ignore errors</td>\n    </tr>\n    <tr>\n      <td><code>@</code></td>\n      <td>Don’t print command</td>\n    </tr>\n    <tr>\n      <td><code>+</code></td>\n      <td>Run even if Make is in ‘don’t execute’ mode</td>\n    </tr>\n  </tbody>\n</table>\n\n<pre><code class=\"language-makefile\">build:\n    @echo \"compiling\"\n    -gcc $&lt; $@\n\n-include .depend\n</code></pre>\n\n<h2 id=\"find-files\">Find files</h2>\n\n<pre><code class=\"language-makefile\">js_files  := $(wildcard test/*.js)\nall_files := $(shell find images -name \"*\")\n</code></pre>\n\n<h2 id=\"substitutions\">Substitutions</h2>\n\n<pre><code class=\"language-makefile\">file     = $(SOURCE:.cpp=.o)   # foo.cpp =&gt; foo.o\noutputs  = $(files:src/%.coffee=lib/%.js)\n\noutputs  = $(patsubst %.c, %.o, $(wildcard *.c))\nassets   = $(patsubst images/%, assets/%, $(wildcard images/*))\n</code></pre>\n\n<h2 id=\"more-functions\">More functions</h2>\n\n<pre><code class=\"language-makefile\">$(strip $(string_var))\n\n$(filter %.less, $(files))\n$(filter-out %.less, $(files))\n</code></pre>\n\n<h2 id=\"building-files\">Building files</h2>\n\n<pre><code class=\"language-makefile\">%.o: %.c\n  ffmpeg -i $&lt; &gt; $@   # Input and output\n  foo $^\n</code></pre>\n\n<h2 id=\"includes\">Includes</h2>\n\n<pre><code class=\"language-makefile\">-include foo.make\n</code></pre>\n\n<h2 id=\"options\">Options</h2>\n\n<pre><code class=\"language-sh\">make\n  -e, --environment-overrides\n  -B, --always-make\n  -s, --silent\n\n  -j, --jobs=N   # parallel processing\n</code></pre>\n\n<h2 id=\"conditionals\">Conditionals</h2>\n\n<pre><code class=\"language-makefile\">foo: $(objects)\nifeq ($(CC),gcc)\n        $(CC) -o foo $(objects) $(libs_for_gcc)\nelse\n        $(CC) -o foo $(objects) $(normal_libs)\nendif\n</code></pre>\n\n<h2 id=\"recursive\">Recursive</h2>\n\n<pre><code class=\"language-makefile\">deploy:\n  $(MAKE) deploy2\n</code></pre>\n\n<h2 id=\"further-reading\">Further reading</h2>\n\n<ul>\n  <li><a href=\"https://gist.github.com/isaacs/62a2d1825d04437c6f08\">isaacs’s Makefile</a></li>\n  <li><a href=\"https://tech.davis-hansson.com/p/make/\">Your Makefiles are wrong</a></li>\n  <li><a href=\"https://www.gnu.org/software/make/manual/html_node/index.html\">Manual</a></li>\n</ul>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "markdown",
  "title": "Markdown",
  "url": "/markdown",
  "category": "Markup",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"reference\">Reference</h2>\n\n<h3 id=\"headers\">Headers</h3>\n\n<pre><code class=\"language-markdown\"># h1\n## h2\n### h3\n</code></pre>\n\n<pre><code class=\"language-markdown\">Header 1\n========\n</code></pre>\n\n<pre><code class=\"language-markdown\">Header 2\n--------\n</code></pre>\n\n<h3 id=\"emphasis\">Emphasis</h3>\n\n<pre><code class=\"language-markdown\">*italic*\n_italic_\n</code></pre>\n\n<pre><code class=\"language-markdown\">**bold**\n__bold__\n</code></pre>\n\n<pre><code class=\"language-markdown\">`code`\n</code></pre>\n\n<h3 id=\"lists\">Lists</h3>\n\n<pre><code class=\"language-markdown\">* Item 1\n* Item 2\n</code></pre>\n\n<pre><code class=\"language-markdown\">- Item 1\n- Item 2\n</code></pre>\n\n<pre><code class=\"language-markdown\">- [ ] Checkbox off\n- [x] Checkbox on\n</code></pre>\n\n<h3 id=\"links\">Links</h3>\n\n<pre><code class=\"language-markdown\">[link](http://google.com)\n</code></pre>\n\n<pre><code class=\"language-markdown\">[link][google]\n[google]: http://google.com\n</code></pre>\n\n<pre><code class=\"language-markdown\">&lt;http://google.com&gt;\n</code></pre>\n\n<h3 id=\"images\">Images</h3>\n\n<pre><code class=\"language-markdown\">![Image alt text](/path/to/img.jpg)\n![Image alt text](/path/to/img.jpg \"title\")\n![Image alt text][img]\n</code></pre>\n\n<pre><code class=\"language-markdown\">[img]: http://foo.com/img.jpg\n</code></pre>\n\n<h3 id=\"code\">Code</h3>\n\n<pre><code>    4 space indent\n    makes a code block\n</code></pre>\n\n<pre><code class=\"language-markdown\">```\ncode fences\n```\n</code></pre>\n\n<pre><code class=\"language-markdown\">```js\ncodeFences.withLanguage()\n```\n</code></pre>\n\n<h3 id=\"blockquotes\">Blockquotes</h3>\n\n<pre><code class=\"language-markdown\">&gt; This is\n&gt; a blockquote\n&gt;\n&gt; &gt; Nested\n&gt; &gt; Blockquote\n</code></pre>\n\n<h3 id=\"horizontal-line\">Horizontal line</h3>\n\n<pre><code class=\"language-markdown\">----\n</code></pre>\n\n<pre><code class=\"language-markdown\">****\n</code></pre>\n\n<h3 id=\"tables\">Tables</h3>\n\n<pre><code class=\"language-markdown\">| Column 1 Heading | Column 2 Heading |\n| ---------------- | ---------------- |\n| Some content     | Other content    |\n</code></pre>\n\n<pre><code class=\"language-markdown\">Column 1 Heading | Column 2 Heading\n--- | ---\nSome content | Other content\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2020-06-24"
},{
  "id": "package",
  "title": "package.json",
  "url": "/package",
  "category": "Hidden",
  "keywords": null,
  "content_html": "",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "python",
  "title": "Python",
  "url": "/python",
  "category": "Python",
  "keywords": null,
  "content_html": "<h3 id=\"lists\">Lists</h3>\n\n<pre><code>list = []\nlist[i:j]  # returns list subset\nlist[-1]   # returns last element\nlist[:-1]  # returns all but the last element\n\nlist[i] = val\nlist[i:j] = otherlist  # replace ith to jth-1 elements with otherlist\ndel list[i:j]\n\nlist.append(item)\nlist.extend(another_list)\nlist.insert(index, item)\nlist.pop()        # returns and removes last element from the list\nlist.pop(i)       # returns and removes i-th element from the list\nlist.remove(i)    # removes the first item from the list whose value is i\nlist1 + list2     # combine two list    \nset(list)         # remove duplicate elements from a list\n\nlist.reverse()    # reverses the elements of the list in-place\nlist.count(item)\nsum(list)\n\nzip(list1, list2)  # returns list of tuples with n-th element of both list1 and list2\nlist.sort()        # sorts in-place, returns None\nsorted(list)       # returns sorted copy of list\n\",\".join(list)     # returns a string with list elements seperated by comma\n</code></pre>\n\n<h3 id=\"dict\">Dict</h3>\n\n<pre><code>dict.keys()\ndict.values()\n\"key\" in dict    # let's say this returns False, then...\ndict[\"key\"]      # ...this raises KeyError\ndict.get(\"key\")  # ...this returns None\ndict.setdefault(\"key\", 1)\n</code></pre>\n\n<h3 id=\"iteration\">Iteration</h3>\n\n<pre><code>for item in [\"a\", \"b\", \"c\"]:\nfor i in range(4):        # 0 to 3\nfor i in range(4, 8):     # 4 to 7\nfor i in range(1, 9, 2):  # 1, 3, 5, 7\nfor key, val in dict.items():\nfor index, item in enumerate(list):\n</code></pre>\n\n<h3 id=\"string\"><a href=\"https://docs.python.org/2/library/stdtypes.html#string-methods\">String</a></h3>\n\n<pre><code>str[0:4]\nlen(str)\n\nstring.replace(\"-\", \" \")\n\",\".join(list)\n\"hi {0}\".format('j')\nf\"hi {name}\" # same as \"hi {}\".format('name')\nstr.find(\",\")\nstr.index(\",\")   # same, but raises IndexError\nstr.count(\",\")\nstr.split(\",\")\n\nstr.lower()\nstr.upper()\nstr.title()\n\nstr.lstrip()\nstr.rstrip()\nstr.strip()\n\nstr.islower()\n\n/* escape characters */\n&gt;&gt;&gt; 'doesn\\'t'  # use \\' to escape the single quote...\n    \"doesn't\"\n&gt;&gt;&gt; \"doesn't\"  # ...or use double quotes instead\n    \"doesn't\"\n&gt;&gt;&gt; '\"Yes,\" they said.'\n    '\"Yes,\" they said.'\n&gt;&gt;&gt; \"\\\"Yes,\\\" they said.\"\n    '\"Yes,\" they said.'\n&gt;&gt;&gt; '\"Isn\\'t,\" they said.'\n    '\"Isn\\'t,\" they said.'\n</code></pre>\n\n<h3 id=\"casting\">Casting</h3>\n\n<pre><code>int(str)\nfloat(str)\nstr(int)\nstr(float)\n'string'.encode()\n</code></pre>\n\n<h3 id=\"comprehensions\">Comprehensions</h3>\n\n<pre><code>[fn(i) for i in list]            # .map\nmap(fn, list)                    # .map, returns iterator\n\nfilter(fn, list)                 # .filter, returns iterator\n[fn(i) for i in list if i &gt; 0]   # .filter.map\n</code></pre>\n\n<h3 id=\"regex\">Regex</h3>\n\n<pre><code>import re\n\nre.match(r'^[aeiou]', str)\nre.sub(r'^[aeiou]', '?', str)\nre.sub(r'(xyz)', r'\\1', str)\n\nexpr = re.compile(r'^...$')\nexpr.match(...)\nexpr.sub(...)\n</code></pre>\n\n<h2 id=\"file-manipulation\">File manipulation</h2>\n\n<h3 id=\"reading\">Reading</h3>\n\n<pre><code class=\"language-py\">file = open(\"hello.txt\", \"r\") # open in read mode 'r'\nfile.close() \n</code></pre>\n\n<pre><code class=\"language-py\">print(file.read())  # read the entire file and set the cursor at the end of file\nprint file.readline() # Reading one line\nfile.seek(0, 0) # place the cursor at the beggining of the file\n</code></pre>\n\n<h3 id=\"writing-overwrite\">Writing (overwrite)</h3>\n\n<pre><code class=\"language-py\">file = open(\"hello.txt\", \"w\") # open in write mode 'w'\nfile.write(\"Hello World\") \n\ntext_lines = [\"First line\", \"Second line\", \"Last line\"] \nfile.writelines(text_lines)\n\nfile.close()\n</code></pre>\n\n<h3 id=\"writing-append\">Writing (append)</h3>\n\n<pre><code class=\"language-py\">file = open(\"Hello.txt\", \"a\") # open in append mode\nfile.write(\"Hello World again\")  \nfile.close()\n</code></pre>\n\n<h3 id=\"context-manager\">Context manager</h3>\n\n<pre><code class=\"language-py\">with open(\"welcome.txt\", \"r\") as file:\n    # 'file' refers directly to \"welcome.txt\"\n   data = file.read()\n\n# It closes the file automatically at the end of scope, no need for `file.close()`.\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "regexp",
  "title": "regexp",
  "url": "/regexp",
  "category": "Others",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"regexp\">RegExp</h2>\n\n<h3 id=\"character-classes\">Character classes</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.</code></td>\n      <td>Any character, except newline</td>\n    </tr>\n    <tr>\n      <td><code>\\w</code></td>\n      <td>Word</td>\n    </tr>\n    <tr>\n      <td><code>\\d</code></td>\n      <td>Digit</td>\n    </tr>\n    <tr>\n      <td><code>\\s</code></td>\n      <td>Whitespace</td>\n    </tr>\n    <tr>\n      <td><code>\\W</code></td>\n      <td>Not word</td>\n    </tr>\n    <tr>\n      <td><code>\\D</code></td>\n      <td>Not digit</td>\n    </tr>\n    <tr>\n      <td><code>\\S</code></td>\n      <td>Not whitespace</td>\n    </tr>\n    <tr>\n      <td><code>[abc]</code></td>\n      <td>Any of a, b, or c</td>\n    </tr>\n    <tr>\n      <td><code>[a-e]</code></td>\n      <td>Characters between <code>a</code> and <code>e</code></td>\n    </tr>\n    <tr>\n      <td><code>[1-9]</code></td>\n      <td>Digit between <code>1</code> and <code>9</code></td>\n    </tr>\n    <tr>\n      <td><code>[[:print:]]</code></td>\n      <td>Any printable character including spaces</td>\n    </tr>\n    <tr>\n      <td><code>[^abc]</code></td>\n      <td>Any character except <code>a</code>, <code>b</code> or <code>c</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"anchors\">Anchors</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>\\G</code></td>\n      <td>Start of match</td>\n    </tr>\n    <tr>\n      <td><code>^</code></td>\n      <td>Start of string</td>\n    </tr>\n    <tr>\n      <td><code>$</code></td>\n      <td>End of string</td>\n    </tr>\n    <tr>\n      <td><code>\\A</code></td>\n      <td>Start of string</td>\n    </tr>\n    <tr>\n      <td><code>\\Z</code></td>\n      <td>End of string</td>\n    </tr>\n    <tr>\n      <td><code>\\z</code></td>\n      <td>Absolute end of string</td>\n    </tr>\n    <tr>\n      <td><code>\\b</code></td>\n      <td>A word boundry</td>\n    </tr>\n    <tr>\n      <td><code>\\B</code></td>\n      <td>Non-word boundry</td>\n    </tr>\n    <tr>\n      <td><code>^abc</code></td>\n      <td>Start with <code>abc</code></td>\n    </tr>\n    <tr>\n      <td><code>abc$</code></td>\n      <td>End with <code>abc</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"escaped-characters\">Escaped characters</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>\\. \\* \\\\</code></td>\n      <td>Escape special character used by regex</td>\n    </tr>\n    <tr>\n      <td><code>\\t</code></td>\n      <td>Tab</td>\n    </tr>\n    <tr>\n      <td><code>\\n</code></td>\n      <td>Newline</td>\n    </tr>\n    <tr>\n      <td><code>\\r</code></td>\n      <td>Carriage return</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"groups\">Groups</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>(abc)</code></td>\n      <td>Capture group</td>\n    </tr>\n    <tr>\n      <td><code>(a|b)</code></td>\n      <td>Match <code>a</code> or <code>b</code></td>\n    </tr>\n    <tr>\n      <td><code>(?:abc)</code></td>\n      <td>Match <code>abc</code>, but don’t capture</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"quantifiers\">Quantifiers</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>a*</code></td>\n      <td>Match 0 or more</td>\n    </tr>\n    <tr>\n      <td><code>a+</code></td>\n      <td>Match 1 or more</td>\n    </tr>\n    <tr>\n      <td><code>a?</code></td>\n      <td>Match 0 or 1</td>\n    </tr>\n    <tr>\n      <td><code>a{5}</code></td>\n      <td>Match exactly 5</td>\n    </tr>\n    <tr>\n      <td><code>a{,3}</code></td>\n      <td>Match up to 3</td>\n    </tr>\n    <tr>\n      <td><code>a{3,}</code></td>\n      <td>Match 3 or more</td>\n    </tr>\n    <tr>\n      <td><code>a{1,3}</code></td>\n      <td>Match between 1 and 3</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"lookahead--lookbehind\">Lookahead &amp; Lookbehind</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Pattern</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>a(?=b)</code></td>\n      <td>Match <code>a</code> in <code>baby</code> but not in <code>bay</code></td>\n    </tr>\n    <tr>\n      <td><code>a(?!b)</code></td>\n      <td>Match <code>a</code> in <code>Stan</code> but not in <code>Stab</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>(?&lt;=a)b</code></td>\n      <td>Match <code>b</code> in <code>crabs</code> but not in <code>cribs</code></td>\n    </tr>\n    <tr>\n      <td><code>(?&lt;!a)b</code></td>\n      <td>Match <code>b</code> in <code>fib</code> but not in <code>fab</code></td>\n    </tr>\n  </tbody>\n</table>",
  "intro_html": "",
  "description_html": "<p>Basic cheatsheets for regular expression</p>",
  "tags": null,
  "updated": "2020-03-10"
},{
  "id": "scp",
  "title": "scp",
  "url": "/scp",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 class=\"-prime\" id=\"usage\">Usage</h3>\n\n<pre><code class=\"language-bash\">scp &lt;options&gt; source_path destination_path\n</code></pre>\n\n<h3 id=\"conditions\">Conditions</h3>\n\n<pre><code class=\"language-bash\">-r      # transfer directory \n-v      # see the transfer details\n-C      # copy files with compression\n-l 800  # limit bandwith with 800\n-p      # preserving the original attributes of the copied files\n-q      # hidden the output\n</code></pre>\n\n<h3 id=\"commands\">Commands</h3>\n\n<pre><code class=\"language-bash\">$ scp file user@host:/path/to/file                        # copying a file to the remote system using scp command\n$ scp user@host:/path/to/file /local/path/to/file         # copying a file from the remote system using scp command\n</code></pre>\n\n<pre><code class=\"language-bash\">$ scp file1 file2 user@host:/path/to/directory            # copying multiple files using scp command\n$ scp -r /path/to/directory user@host:/path/to/directory  # Copying an entire directory with scp command\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": "2018-12-25"
},{
  "id": "sed",
  "title": "sed",
  "url": "/sed",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h2 id=\"in-place-replacements\">In place replacements</h2>\n\n<h3 id=\"in-place-replacement-gnu\">In-place replacement (GNU)</h3>\n\n<pre><code class=\"language-bash\">sed -i -e 's/foo/bar/' example.md\n</code></pre>\n\n<p>In GNU sed: use <code>-i</code> without arg.</p>\n\n<h4 id=\"in-place-replacement-bsd\">In-place replacement (BSD)</h4>\n\n<pre><code class=\"language-bash\">sed -i '' -e 's/foo/bar/' example.md\n</code></pre>\n\n<p>In OSX, <code>-i ''</code> is required.</p>\n\n<h2 class=\"-three-column\" id=\"file-regions\">File regions</h2>\n\n<h3 id=\"print-until-a-certain-line-is-met\">Print until a certain line is met</h3>\n\n<pre><code class=\"language-bash\">sed '/begin api/q'\n</code></pre>\n\n<h3 id=\"print-until-a-certain-line-is-met-but-not-that-line\">Print until a certain line is met, but not that line</h3>\n\n<pre><code class=\"language-bash\">sed '/^# begin/,$d'\n</code></pre>\n\n<h3 id=\"print-everything-after-a-given-line\">Print everything after a given line</h3>\n\n<pre><code class=\"language-bash\">sed -n '/end api/,$p'\n</code></pre>\n\n<p>Print after a given line is found.</p>\n\n<h3 id=\"print-everything-except-matching\">Print everything except matching</h3>\n\n<pre><code class=\"language-bash\">sed -n '/regex/d;'\n</code></pre>\n\n<p>Print everything except lines matching regex. Useful for printing files with comments.</p>",
  "intro_html": "<p>Here’s some hints on using sed.</p>",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "sh",
  "title": "Shell scripting",
  "url": "/sh",
  "category": "CLI",
  "keywords": null,
  "content_html": "",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "ubuntu",
  "title": "Ubuntu",
  "url": "/ubuntu",
  "category": "Others",
  "keywords": null,
  "content_html": "<h3 id=\"aptitude-stuff\">Aptitude stuff</h3>\n\n<pre><code>aptitude search mysql       # Look for something\ndpkg -S `which tsclient`    # What package does it belong to?\ndpkg -L aria2c              # What does this package provide?\ndpkg -i *.deb               # Install a deb file\ndpkg -s nodejs              # Show info\n\ndpkg --get-selections       # list installed packages\n</code></pre>\n\n<h3 id=\"apt-archives-path\">Apt archives path</h3>\n\n<pre><code>/var/cache/apt/archives\n</code></pre>\n\n<h3 id=\"list-services\">List services</h3>\n\n<pre><code>service --status-all\n</code></pre>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "vim",
  "title": "Vim",
  "url": "/vim",
  "category": "Vim",
  "keywords": null,
  "content_html": "<h2 class=\"-three-column\" id=\"getting-started\">Getting started</h2>\n\n<h3 class=\"-prime\" id=\"exiting\">Exiting</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:qa</code></td>\n      <td>Close all files</td>\n    </tr>\n    <tr>\n      <td><code>:qa!</code></td>\n      <td>Close all files, abandon changes</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:w</code></td>\n      <td>Save</td>\n    </tr>\n    <tr>\n      <td><code>:wq</code> <em>/</em> <code>:x</code></td>\n      <td>Save and close file</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:q</code></td>\n      <td>Close file</td>\n    </tr>\n    <tr>\n      <td><code>:q!</code></td>\n      <td>Close file, abandon changes</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>ZZ</code></td>\n      <td>Save and quit</td>\n    </tr>\n    <tr>\n      <td><code>ZQ</code></td>\n      <td>Quit without checking changes</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"navigating\">Navigating</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>h</code> <code>j</code> <code>k</code> <code>l</code></td>\n      <td>Arrow keys</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-U&gt;</code> <em>/</em> <code>&lt;C-D&gt;</code></td>\n      <td>Half-page up/down</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-B&gt;</code> <em>/</em> <code>&lt;C-F&gt;</code></td>\n      <td>Page up/down</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"words\">Words</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>b</code> <em>/</em> <code>w</code></td>\n      <td>Previous/next word</td>\n    </tr>\n    <tr>\n      <td><code>ge</code> <em>/</em> <code>e</code></td>\n      <td>Previous/next end of word</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"line\">Line</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>0</code> <em>(zero)</em></td>\n      <td>Start of line</td>\n    </tr>\n    <tr>\n      <td><code>^</code></td>\n      <td>Start of line <em>(after whitespace)</em></td>\n    </tr>\n    <tr>\n      <td><code>$</code></td>\n      <td>End of line</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"character\">Character</h4>\n\n<table class=\"-shortcuts\">\n  <tbody>\n    <tr>\n      <td><code>fc</code></td>\n      <td>Go forward to character <code>c</code></td>\n    </tr>\n    <tr>\n      <td><code>Fc</code></td>\n      <td>Go backward to character <code>c</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"document\">Document</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>gg</code></td>\n      <td>First line</td>\n    </tr>\n    <tr>\n      <td><code>G</code></td>\n      <td>Last line</td>\n    </tr>\n    <tr>\n      <td><code>:n</code></td>\n      <td>Go to line <code>n</code></td>\n    </tr>\n    <tr>\n      <td><code>nG</code></td>\n      <td>Go to line <code>n</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"window\">Window</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>zz</code></td>\n      <td>Center this line</td>\n    </tr>\n    <tr>\n      <td><code>zt</code></td>\n      <td>Top this line</td>\n    </tr>\n    <tr>\n      <td><code>zb</code></td>\n      <td>Bottom this line</td>\n    </tr>\n    <tr>\n      <td><code>H</code></td>\n      <td>Move to top of screen</td>\n    </tr>\n    <tr>\n      <td><code>M</code></td>\n      <td>Move to middle of screen</td>\n    </tr>\n    <tr>\n      <td><code>L</code></td>\n      <td>Move to bottom of screen</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"search\">Search</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>n</code></td>\n      <td>Next matching search pattern</td>\n    </tr>\n    <tr>\n      <td><code>N</code></td>\n      <td>Previous match</td>\n    </tr>\n    <tr>\n      <td><code>*</code></td>\n      <td>Next whole word under cursor</td>\n    </tr>\n    <tr>\n      <td><code>#</code></td>\n      <td>Previous whole word under cursor</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"tab-pages\">Tab pages</h4>\n\n<table>\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:tabedit [file]</code></td>\n      <td>Edit file in a new tab</td>\n    </tr>\n    <tr>\n      <td><code>:tabfind [file]</code></td>\n      <td>Open file if exists in new tab</td>\n    </tr>\n    <tr>\n      <td><code>:tabclose</code></td>\n      <td>Close current tab</td>\n    </tr>\n    <tr>\n      <td><code>:tabs</code></td>\n      <td>List all tabs</td>\n    </tr>\n    <tr>\n      <td><code>:tabfirst</code></td>\n      <td>Go to first tab</td>\n    </tr>\n    <tr>\n      <td><code>:tablast</code></td>\n      <td>Go to last tab</td>\n    </tr>\n    <tr>\n      <td><code>:tabn    </code></td>\n      <td>Go to next tab</td>\n    </tr>\n    <tr>\n      <td><code>:tabp    </code></td>\n      <td>Go to previous tab</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"editing\">Editing</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>a</code></td>\n      <td>Append</td>\n    </tr>\n    <tr>\n      <td><code>A</code></td>\n      <td>Append from end of line</td>\n    </tr>\n    <tr>\n      <td><code>i</code></td>\n      <td>Insert</td>\n    </tr>\n    <tr>\n      <td><code>o</code></td>\n      <td>Next line</td>\n    </tr>\n    <tr>\n      <td><code>O</code></td>\n      <td>Previous line</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>s</code></td>\n      <td>Delete char and insert</td>\n    </tr>\n    <tr>\n      <td><code>S</code></td>\n      <td>Delete line and insert</td>\n    </tr>\n    <tr>\n      <td><code>C</code></td>\n      <td>Delete until end of line and insert</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>r</code></td>\n      <td>Replace one character</td>\n    </tr>\n    <tr>\n      <td><code>R</code></td>\n      <td>Enter Replace mode</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>u</code></td>\n      <td>Undo changes</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-R&gt;</code></td>\n      <td>Redo changes</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"exiting-insert-mode\">Exiting insert mode</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>Esc</code> <em>/</em> <code>&lt;C-[&gt;</code></td>\n      <td>Exit insert mode</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-C&gt;</code></td>\n      <td>Exit insert mode, and abort current command</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"clipboard\">Clipboard</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>x</code></td>\n      <td>Delete character</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>dd</code></td>\n      <td>Delete line <em>(Cut)</em></td>\n    </tr>\n    <tr>\n      <td><code>yy</code></td>\n      <td>Yank line <em>(Copy)</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>p</code></td>\n      <td>Paste</td>\n    </tr>\n    <tr>\n      <td><code>P</code></td>\n      <td>Paste before</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>\"*p</code> <em>/</em> <code>\"+p</code></td>\n      <td>Paste from system clipboard</td>\n    </tr>\n    <tr>\n      <td><code>\"*y</code> <em>/</em> <code>\"+y</code></td>\n      <td>Paste to system clipboard</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"visual-mode\">Visual mode</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>v</code></td>\n      <td>Enter visual mode</td>\n    </tr>\n    <tr>\n      <td><code>V</code></td>\n      <td>Enter visual line mode</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-V&gt;</code></td>\n      <td>Enter visual block mode</td>\n    </tr>\n  </tbody>\n</table>\n\n<h4 id=\"in-visual-mode\">In visual mode</h4>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>d</code> <em>/</em> <code>x</code></td>\n      <td>Delete selection</td>\n    </tr>\n    <tr>\n      <td><code>s</code></td>\n      <td>Replace selection</td>\n    </tr>\n    <tr>\n      <td><code>y</code></td>\n      <td>Yank selection <em>(Copy)</em></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"#operators\">Operators</a> for other things you can do.</p>\n\n<h2 class=\"-three-column\" id=\"operators\">Operators</h2>\n\n<h3 class=\"-prime\" id=\"usage\">Usage</h3>\n\n<p class=\"-setup\">Operators let you operate in a range of text (defined by <em>motion</em>). These are performed in normal mode.</p>\n\n<table class=\"-css-breakdown\">\n  <tbody>\n    <tr>\n      <td><code>d</code></td>\n      <td><code>w</code></td>\n    </tr>\n    <tr>\n      <td>Operator</td>\n      <td>Motion</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"operators-list\">Operators list</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>d</code></td>\n      <td>Delete</td>\n    </tr>\n    <tr>\n      <td><code>y</code></td>\n      <td>Yank <em>(copy)</em></td>\n    </tr>\n    <tr>\n      <td><code>c</code></td>\n      <td>Change <em>(delete then insert)</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>&gt;</code></td>\n      <td>Indent right</td>\n    </tr>\n    <tr>\n      <td><code>&lt;</code></td>\n      <td>Indent left</td>\n    </tr>\n    <tr>\n      <td><code>=</code></td>\n      <td>Autoindent</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>g~</code></td>\n      <td>Swap case</td>\n    </tr>\n    <tr>\n      <td><code>gU</code></td>\n      <td>Uppercase</td>\n    </tr>\n    <tr>\n      <td><code>gu</code></td>\n      <td>Lowercase</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>!</code></td>\n      <td>Filter through external program</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <code>:help operator</code></p>\n\n<h3 id=\"examples\">Examples</h3>\n\n<p class=\"-setup\">Combine operators with <em>motions</em> to use them.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>d</code><em>d</em></td>\n      <td><em>(repeat the letter)</em> Delete current line</td>\n    </tr>\n    <tr>\n      <td><code>d</code><em>w</em></td>\n      <td>Delete to next word</td>\n    </tr>\n    <tr>\n      <td><code>d</code><em>b</em></td>\n      <td>Delete to beginning of word</td>\n    </tr>\n    <tr>\n      <td><em>2</em><code>dd</code></td>\n      <td>Delete 2 lines</td>\n    </tr>\n    <tr>\n      <td><code>d</code><em>ip</em></td>\n      <td>Delete a text object <em>(inside paragraph)</em></td>\n    </tr>\n    <tr>\n      <td><em>(in visual mode)</em> <code>d</code></td>\n      <td>Delete selection</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See: <code>:help motion.txt</code></p>\n\n<h2 class=\"-three-column\" id=\"text-objects\">Text objects</h2>\n\n<h3 class=\"-prime\" id=\"usage-1\">Usage</h3>\n\n<p class=\"-setup\">Text objects let you operate (with an <em>operator</em>) in or around text blocks (<em>objects</em>).</p>\n\n<table class=\"-css-breakdown\">\n  <tbody>\n    <tr>\n      <td><code>v</code></td>\n      <td><code>i</code></td>\n      <td><code>p</code></td>\n    </tr>\n    <tr>\n      <td>Operator</td>\n      <td>[i]nside or [a]round</td>\n      <td>Text object</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"text-objects-1\">Text objects</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>p</code></td>\n      <td>Paragraph</td>\n    </tr>\n    <tr>\n      <td><code>w</code></td>\n      <td>Word</td>\n    </tr>\n    <tr>\n      <td><code>s</code></td>\n      <td>Sentence</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[</code> <code>(</code> <code>{</code> <code>&lt;</code></td>\n      <td>A [], (), or {} block</td>\n    </tr>\n    <tr>\n      <td><code>'</code> <code>\"</code> <code>`</code></td>\n      <td>A quoted string</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>b</code></td>\n      <td>A block [(</td>\n    </tr>\n    <tr>\n      <td><code>B</code></td>\n      <td>A block in [{</td>\n    </tr>\n    <tr>\n      <td><code>t</code></td>\n      <td>A XML tag block</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"examples-1\">Examples</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>vip</code></td>\n      <td>Select paragraph</td>\n    </tr>\n    <tr>\n      <td><code>vipipipip</code></td>\n      <td>Select more</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>yip</code></td>\n      <td>Yank inner paragraph</td>\n    </tr>\n    <tr>\n      <td><code>yap</code></td>\n      <td>Yank paragraph (including newline)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>dip</code></td>\n      <td>Delete inner paragraph</td>\n    </tr>\n    <tr>\n      <td><code>cip</code></td>\n      <td>Change inner paragraph</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <a href=\"#operators\">Operators</a> for other things you can do.</p>\n\n<h3 id=\"diff\">Diff</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>gvimdiff file1 file2 [file3]</code></td>\n      <td>See differences between files, in HMI</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"misc\">Misc</h2>\n\n<h3 id=\"folds\">Folds</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>zo</code> <em>/</em> <code>zO</code></td>\n      <td>Open</td>\n    </tr>\n    <tr>\n      <td><code>zc</code> <em>/</em> <code>zC</code></td>\n      <td>Close</td>\n    </tr>\n    <tr>\n      <td><code>za</code> <em>/</em> <code>zA</code></td>\n      <td>Toggle</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>zv</code></td>\n      <td>Open folds for this line</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>zM</code></td>\n      <td>Close all</td>\n    </tr>\n    <tr>\n      <td><code>zR</code></td>\n      <td>Open all</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>zm</code></td>\n      <td>Fold more <em>(foldlevel += 1)</em></td>\n    </tr>\n    <tr>\n      <td><code>zr</code></td>\n      <td>Fold less <em>(foldlevel -= 1)</em></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>zx</code></td>\n      <td>Update folds</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Uppercase ones are recursive (eg, <code>zO</code> is open recursively).</p>\n\n<h3 id=\"navigation\">Navigation</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>%</code></td>\n      <td>Nearest/matching <code>{[()]}</code></td>\n    </tr>\n    <tr>\n      <td><code>[(</code> <code>[{</code> <code>[&lt;</code></td>\n      <td>Previous <code>(</code> or <code>{</code> or <code>&lt;</code></td>\n    </tr>\n    <tr>\n      <td><code>])</code></td>\n      <td>Next</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>[m</code></td>\n      <td>Previous method start</td>\n    </tr>\n    <tr>\n      <td><code>[M</code></td>\n      <td>Previous method end</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"jumping\">Jumping</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&lt;C-O&gt;</code></td>\n      <td>Go back to previous location</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-I&gt;</code></td>\n      <td>Go forward</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>gf</code></td>\n      <td>Go to file in cursor</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"counters\">Counters</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&lt;C-A&gt;</code></td>\n      <td>Increment number</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-X&gt;</code></td>\n      <td>Decrement</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"windows\">Windows</h3>\n\n<table>\n  <tbody>\n    <tr>\n      <td><code>z{height}&lt;Cr&gt;</code></td>\n      <td>Resize pane to <code>{height}</code> lines tall</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"tags\">Tags</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:tag Classname</code></td>\n      <td>Jump to first definition of Classname</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>&lt;C-]&gt;</code></td>\n      <td>Jump to definition</td>\n    </tr>\n    <tr>\n      <td><code>g]</code></td>\n      <td>See all definitions</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-T&gt;</code></td>\n      <td>Go back to last tag</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-O&gt; &lt;C-I&gt;</code></td>\n      <td>Back/forward</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:tselect Classname</code></td>\n      <td>Find definitions of Classname</td>\n    </tr>\n    <tr>\n      <td><code>:tjump Classname</code></td>\n      <td>Find definitions of Classname (auto-select 1st)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"case\">Case</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>~</code></td>\n      <td>Toggle case (Case =&gt; cASE)</td>\n    </tr>\n    <tr>\n      <td><code>gU</code></td>\n      <td>Uppercase</td>\n    </tr>\n    <tr>\n      <td><code>gu</code></td>\n      <td>Lowercase</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>gUU</code></td>\n      <td>Uppercase current line (also <code>gUgU</code>)</td>\n    </tr>\n    <tr>\n      <td><code>guu</code></td>\n      <td>Lowercase current line (also <code>gugu</code>)</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Do these in visual or normal mode.</p>\n\n<h3 id=\"marks\">Marks</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>`^</code></td>\n      <td>Last position of cursor in insert mode</td>\n    </tr>\n    <tr>\n      <td><code>`.</code></td>\n      <td>Last change in current buffer</td>\n    </tr>\n    <tr>\n      <td><code>`\"</code></td>\n      <td>Last exited current buffer</td>\n    </tr>\n    <tr>\n      <td><code>`0</code></td>\n      <td>In last file edited</td>\n    </tr>\n    <tr>\n      <td><code>''</code></td>\n      <td>Back to line in current buffer where jumped from</td>\n    </tr>\n    <tr>\n      <td><code>``</code></td>\n      <td>Back to position in current buffer where jumped from</td>\n    </tr>\n    <tr>\n      <td><code>`[</code></td>\n      <td>To beginning of previously changed or yanked text</td>\n    </tr>\n    <tr>\n      <td><code>`]</code></td>\n      <td>To end of previously changed or yanked text</td>\n    </tr>\n    <tr>\n      <td><code>`&lt;</code></td>\n      <td>To beginning of last visual selection</td>\n    </tr>\n    <tr>\n      <td><code>`&gt;</code></td>\n      <td>To end of last visual selection</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>ma</code></td>\n      <td>Mark this cursor position as <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>`a</code></td>\n      <td>Jump to the cursor position <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>'a</code></td>\n      <td>Jump to the beginning of the line with position <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>d'a</code></td>\n      <td>Delete from current line to line of mark <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>d`a</code></td>\n      <td>Delete from current position to position of mark <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>c'a</code></td>\n      <td>Change text from current line to line of <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>y`a</code></td>\n      <td>Yank text from current position to position of <code>a</code></td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:marks</code></td>\n      <td>List all current marks</td>\n    </tr>\n    <tr>\n      <td><code>:delm a</code></td>\n      <td>Delete mark <code>a</code></td>\n    </tr>\n    <tr>\n      <td><code>:delm a-d</code></td>\n      <td>Delete marks <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code></td>\n    </tr>\n    <tr>\n      <td><code>:delm abc</code></td>\n      <td>Delete marks <code>a</code>, <code>b</code>, <code>c</code></td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"misc-1\">Misc</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>.</code></td>\n      <td>Repeat last command</td>\n    </tr>\n    <tr>\n      <td><code>]p</code></td>\n      <td>Paste under the current indentation level</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>:set ff=unix</code></td>\n      <td>Convert Windows line endings to Unix line endings</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"command-line\">Command line</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&lt;C-R&gt;&lt;C-W&gt;</code></td>\n      <td>Insert current word into the command line</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-R&gt;\"</code></td>\n      <td>Paste from “ register</td>\n    </tr>\n    <tr>\n      <td><code>&lt;C-X&gt;&lt;C-F&gt;</code></td>\n      <td>Auto-completion of path in insert mode</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"text-alignment\">Text alignment</h3>\n\n<pre><code>:center [width]\n:right [width]\n:left\n</code></pre>\n\n<p>See <code>:help formatting</code></p>\n\n<h3 id=\"calculator\">Calculator</h3>\n\n<table>\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&lt;C-R&gt;=128/2</code></td>\n      <td>Shows the result of the division : ‘64’</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Do this in insert mode.</p>\n\n<h3 id=\"exiting-with-an-error\">Exiting with an error</h3>\n\n<pre><code>:cq\n:cquit\n</code></pre>\n\n<p>Works like <code>:qa</code>, but throws an error. Great for aborting Git commands.</p>\n\n<h3 id=\"spell-checking\">Spell checking</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Shortcut</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>:set spell spelllang=en_us</code></td>\n      <td>Turn on US English spell checking</td>\n    </tr>\n    <tr>\n      <td><code>]s</code></td>\n      <td>Move to next misspelled word after the cursor</td>\n    </tr>\n    <tr>\n      <td><code>[s</code></td>\n      <td>Move to previous misspelled word before the cursor</td>\n    </tr>\n    <tr>\n      <td><code>z=</code></td>\n      <td>Suggest spellings for the word under/after the cursor</td>\n    </tr>\n    <tr>\n      <td><code>zg</code></td>\n      <td>Add word to spell list</td>\n    </tr>\n    <tr>\n      <td><code>zw</code></td>\n      <td>Mark word as bad/mispelling</td>\n    </tr>\n    <tr>\n      <td><code>zu</code> / <code>C-X (Insert Mode)</code></td>\n      <td>Suggest words for bad word under cursor from spellfile</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>See <code>:help spell</code></p>\n\n<h2 id=\"also-see\">Also see</h2>\n\n<ul>\n  <li><a href=\"https://vim.rtorr.com/\">Vim cheatsheet</a> <em>(vim.rotrr.com)</em></li>\n  <li><a href=\"http://vimdoc.sourceforge.net/htmldoc/\">Vim documentation</a> <em>(vimdoc.sourceforge.net)</em></li>\n  <li><a href=\"http://openvim.com/\">Interactive Vim tutorial</a> <em>(openvim.com)</em></li>\n</ul>",
  "intro_html": "<p><a href=\"http://www.vim.org/\">Vim</a> is a very efficient text editor. This reference was made for Vim 8.0. <br />\nFor shortcut notation, see <code>:help key-notation</code>.</p>",
  "description_html": "",
  "tags": ["Featured"],
  "updated": "2020-07-05"
},{
  "id": "vscode",
  "title": "Visual Studio Code",
  "url": "/vscode",
  "category": "Apps",
  "keywords": ["⌘P: Show files","⌘B: Toggle sidebar","⌘J: Toggle panel","F5: Debug"],
  "content_html": "<h2 class=\"-three-column\" id=\"shortcuts\">Shortcuts</h2>\n\n<h3 id=\"command-palette\">Command palette</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⇧⌘P</code></td>\n      <td>Show all commands</td>\n    </tr>\n    <tr>\n      <td><code>⌘P</code></td>\n      <td>Show files</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"sidebars\">Sidebars</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘B</code></td>\n      <td>Toggle sidebar</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⇧⌘E</code></td>\n      <td>Explorer</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘F</code></td>\n      <td>Search</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘D</code></td>\n      <td>Debug</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘X</code></td>\n      <td>Extensions</td>\n    </tr>\n    <tr>\n      <td><code>⇧^G</code></td>\n      <td>Git (SCM)</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"search\">Search</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘F</code></td>\n      <td>Find</td>\n    </tr>\n    <tr>\n      <td><code>⌥⌘F</code></td>\n      <td>Replace</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⇧⌘F</code></td>\n      <td>Find in files</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘H</code></td>\n      <td>Replace in files</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"panel\">Panel</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘J</code></td>\n      <td>Toggle panel</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⇧⌘M</code></td>\n      <td>Problems</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘U</code></td>\n      <td>Output</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘Y</code></td>\n      <td>Debug console</td>\n    </tr>\n    <tr>\n      <td><code>^`</code></td>\n      <td>Terminal</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"view\">View</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>⌘k</code> <code>z</code></td>\n      <td>Zen mode</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⌘k</code> <code>u</code></td>\n      <td>Close unmodified</td>\n    </tr>\n    <tr>\n      <td><code>⌘k</code> <code>w</code></td>\n      <td>Close all</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"debug\">Debug</h3>\n\n<table class=\"-shortcuts\">\n  <thead>\n    <tr>\n      <th>Key</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>F5</code></td>\n      <td>Start</td>\n    </tr>\n    <tr>\n      <td><code>⇧F5</code></td>\n      <td>Stop</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘F5</code></td>\n      <td>Restart</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>^F5</code></td>\n      <td>Start without debugging</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>F9</code></td>\n      <td>Toggle breakpoint</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>F10</code></td>\n      <td>Step over</td>\n    </tr>\n    <tr>\n      <td><code>F11</code></td>\n      <td>Step into</td>\n    </tr>\n    <tr>\n      <td><code>⇧F11</code></td>\n      <td>Step out</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>⇧⌘D</code></td>\n      <td>Debug sidebar</td>\n    </tr>\n    <tr>\n      <td><code>⇧⌘Y</code></td>\n      <td>Debug panel</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"references\">References</h2>\n\n<ul>\n  <li><a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf\">Keyboard shortcuts (MacOS)</a> <em>(code.visualstudio.com)</em></li>\n  <li><a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf\">Keyboard shortcuts (Windows)</a> <em>(code.visualstudio.com)</em></li>\n  <li><a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-linux.pdf\">Keyboard shortcuts (Linux)</a> <em>(code.visualstudio.com)</em></li>\n</ul>",
  "intro_html": "<p><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>, or VSCode, is an open-source code editor. This guide targets VSCode v1.19.</p>",
  "description_html": "",
  "tags": null,
  "updated": "2018-02-01"
},{
  "id": "zsh",
  "title": "zsh",
  "url": "/zsh",
  "category": "CLI",
  "keywords": null,
  "content_html": "<h3 id=\"expressions\">Expressions</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>!!</code></td>\n      <td><code>sudo !!</code></td>\n      <td>Last command (<code>sudo !!</code>)</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>!*</code></td>\n      <td><code>vim !*</code></td>\n      <td>Last command’s parameters (<code>vim !*</code>)</td>\n    </tr>\n    <tr>\n      <td><code>!^</code></td>\n      <td> </td>\n      <td>Last command’s first parameter</td>\n    </tr>\n    <tr>\n      <td><code>!$</code></td>\n      <td> </td>\n      <td>Last command’s last parameter</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>!?ls</code> <code>&lt;tab&gt;</code></td>\n      <td><code>sudo !?mv</code> <code>&lt;tab&gt;</code></td>\n      <td>Command and params of last <code>ls</code> command</td>\n    </tr>\n    <tr>\n      <td><code>!?ls?:*</code> <code>&lt;tab&gt;</code></td>\n      <td> </td>\n      <td>Params of last <code>ls</code> command</td>\n    </tr>\n  </tbody>\n  <tbody>\n    <tr>\n      <td><code>*(m0)</code></td>\n      <td><code>rm *(m0)</code></td>\n      <td>Last modified today</td>\n    </tr>\n    <tr>\n      <td><code>*(m-4)</code></td>\n      <td> </td>\n      <td>Last modified &lt;4 days ago</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"change-default-shell\">Change default shell</h3>\n\n<pre><code class=\"language-bash\">chsh -s `which zsh`\n</code></pre>\n\n<h3 id=\"process-substitution\">Process Substitution</h3>\n\n<table class=\"-headers\">\n  <thead>\n    <tr>\n      <th>Expression</th>\n      <th>Example</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><code>&lt;(COMMAND)</code></td>\n      <td><code>grep \"needle\" &lt;(curl \"https://haystack.io\")</code></td>\n      <td>Replace argument with <em>named pipe/FIFO</em> (read-only) with command output</td>\n    </tr>\n    <tr>\n      <td><code>=(COMMAND)</code></td>\n      <td><code>vim =(curl \"https://haystack.io\")</code></td>\n      <td>Replace argument with <em>file</em> (writable) containing command output</td>\n    </tr>\n  </tbody>\n</table>\n\n<h3 id=\"also-see\">Also see</h3>\n\n<ul>\n  <li><a href=\"./bash\">Bash cheatsheet</a></li>\n</ul>\n\n<p>Zsh is mostly compatible with Bash, so most everything in Bash’s cheatsheet also applies.</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "assets/css/style.css",
  "title": null,
  "url": "/assets/css/style.css",
  "category": "Others",
  "keywords": null,
  "content_html": "<p>@import “jekyll-theme-primer”;</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
},{
  "id": "redirects.json",
  "title": null,
  "url": "/redirects.json",
  "category": "Others",
  "keywords": null,
  "content_html": "<p>{“/package.html”:”https://devhints.io/package.json”,”/sh.html”:”https://devhints.io/bash”}</p>",
  "intro_html": "",
  "description_html": "",
  "tags": null,
  "updated": null
}
]

